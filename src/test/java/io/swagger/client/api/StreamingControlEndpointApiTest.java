/*
 * Polling API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ResponseOutputModelListEntityStreamingModel;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StreamingControlEndpointApi
 */
public class StreamingControlEndpointApiTest {

    private final StreamingControlEndpointApi api = new StreamingControlEndpointApi();

    
    /**
     * Return a list of the top 12 latest live streams for any game
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void streamingLatestLiveStreamsTest() throws ApiException {
        // ResponseOutputModelListEntityStreamingModel response = api.streamingLatestLiveStreams();

        // TODO: test validations
    }
    
    /**
     * Return a list of the top latest live streams based on advanced search
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void streamingLatestLiveStreamsAdvancedSearchTest() throws ApiException {
        Integer topStreamsCount = null;
        List<String> gameShortCodeList = null;
        // ResponseOutputModelListEntityStreamingModel response = api.streamingLatestLiveStreamsAdvancedSearch(topStreamsCount, gameShortCodeList);

        // TODO: test validations
    }
    
    /**
     * Return a list of the latest live streams for any game
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void streamingLatestLiveStreams_0Test() throws ApiException {
        Integer topStreamCount = null;
        // ResponseOutputModelListEntityStreamingModel response = api.streamingLatestLiveStreams_0(topStreamCount);

        // TODO: test validations
    }
    
    /**
     * Return a list of the latest live streams for a specific game
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void streamingLatestLiveStreams_1Test() throws ApiException {
        String gameShortcode = null;
        Integer topStreamCount = null;
        // ResponseOutputModelListEntityStreamingModel response = api.streamingLatestLiveStreams_1(gameShortcode, topStreamCount);

        // TODO: test validations
    }
    
}
