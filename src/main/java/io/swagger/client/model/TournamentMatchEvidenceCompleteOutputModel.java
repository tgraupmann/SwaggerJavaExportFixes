/*
 * Polling API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.EntityProfileModel;
import org.joda.time.DateTime;

/**
 * TournamentMatchEvidenceCompleteOutputModel
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-02T00:05:30.138Z")
public class TournamentMatchEvidenceCompleteOutputModel {
  @SerializedName("PlayerProfile")
  private EntityProfileModel playerProfile = null;

  @SerializedName("TournamentMatchEvidenceId")
  private Long tournamentMatchEvidenceId = null;

  @SerializedName("TournamentMatchId")
  private Long tournamentMatchId = null;

  @SerializedName("EntityPlayerId")
  private Long entityPlayerId = null;

  @SerializedName("FileName")
  private String fileName = null;

  @SerializedName("FullFilePathUrl")
  private String fullFilePathUrl = null;

  @SerializedName("UploadDateTime")
  private DateTime uploadDateTime = null;

  @SerializedName("Comments")
  private String comments = null;

  public TournamentMatchEvidenceCompleteOutputModel playerProfile(EntityProfileModel playerProfile) {
    this.playerProfile = playerProfile;
    return this;
  }

   /**
   * Get playerProfile
   * @return playerProfile
  **/
  @ApiModelProperty(example = "null", value = "")
  public EntityProfileModel getPlayerProfile() {
    return playerProfile;
  }

  public void setPlayerProfile(EntityProfileModel playerProfile) {
    this.playerProfile = playerProfile;
  }

  public TournamentMatchEvidenceCompleteOutputModel tournamentMatchEvidenceId(Long tournamentMatchEvidenceId) {
    this.tournamentMatchEvidenceId = tournamentMatchEvidenceId;
    return this;
  }

   /**
   * Get tournamentMatchEvidenceId
   * @return tournamentMatchEvidenceId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getTournamentMatchEvidenceId() {
    return tournamentMatchEvidenceId;
  }

  public void setTournamentMatchEvidenceId(Long tournamentMatchEvidenceId) {
    this.tournamentMatchEvidenceId = tournamentMatchEvidenceId;
  }

  public TournamentMatchEvidenceCompleteOutputModel tournamentMatchId(Long tournamentMatchId) {
    this.tournamentMatchId = tournamentMatchId;
    return this;
  }

   /**
   * Get tournamentMatchId
   * @return tournamentMatchId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getTournamentMatchId() {
    return tournamentMatchId;
  }

  public void setTournamentMatchId(Long tournamentMatchId) {
    this.tournamentMatchId = tournamentMatchId;
  }

  public TournamentMatchEvidenceCompleteOutputModel entityPlayerId(Long entityPlayerId) {
    this.entityPlayerId = entityPlayerId;
    return this;
  }

   /**
   * Get entityPlayerId
   * @return entityPlayerId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getEntityPlayerId() {
    return entityPlayerId;
  }

  public void setEntityPlayerId(Long entityPlayerId) {
    this.entityPlayerId = entityPlayerId;
  }

  public TournamentMatchEvidenceCompleteOutputModel fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public TournamentMatchEvidenceCompleteOutputModel fullFilePathUrl(String fullFilePathUrl) {
    this.fullFilePathUrl = fullFilePathUrl;
    return this;
  }

   /**
   * Get fullFilePathUrl
   * @return fullFilePathUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getFullFilePathUrl() {
    return fullFilePathUrl;
  }

  public void setFullFilePathUrl(String fullFilePathUrl) {
    this.fullFilePathUrl = fullFilePathUrl;
  }

  public TournamentMatchEvidenceCompleteOutputModel uploadDateTime(DateTime uploadDateTime) {
    this.uploadDateTime = uploadDateTime;
    return this;
  }

   /**
   * Get uploadDateTime
   * @return uploadDateTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getUploadDateTime() {
    return uploadDateTime;
  }

  public void setUploadDateTime(DateTime uploadDateTime) {
    this.uploadDateTime = uploadDateTime;
  }

  public TournamentMatchEvidenceCompleteOutputModel comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TournamentMatchEvidenceCompleteOutputModel tournamentMatchEvidenceCompleteOutputModel = (TournamentMatchEvidenceCompleteOutputModel) o;
    return Objects.equals(this.playerProfile, tournamentMatchEvidenceCompleteOutputModel.playerProfile) &&
        Objects.equals(this.tournamentMatchEvidenceId, tournamentMatchEvidenceCompleteOutputModel.tournamentMatchEvidenceId) &&
        Objects.equals(this.tournamentMatchId, tournamentMatchEvidenceCompleteOutputModel.tournamentMatchId) &&
        Objects.equals(this.entityPlayerId, tournamentMatchEvidenceCompleteOutputModel.entityPlayerId) &&
        Objects.equals(this.fileName, tournamentMatchEvidenceCompleteOutputModel.fileName) &&
        Objects.equals(this.fullFilePathUrl, tournamentMatchEvidenceCompleteOutputModel.fullFilePathUrl) &&
        Objects.equals(this.uploadDateTime, tournamentMatchEvidenceCompleteOutputModel.uploadDateTime) &&
        Objects.equals(this.comments, tournamentMatchEvidenceCompleteOutputModel.comments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(playerProfile, tournamentMatchEvidenceId, tournamentMatchId, entityPlayerId, fileName, fullFilePathUrl, uploadDateTime, comments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TournamentMatchEvidenceCompleteOutputModel {\n");
    
    sb.append("    playerProfile: ").append(toIndentedString(playerProfile)).append("\n");
    sb.append("    tournamentMatchEvidenceId: ").append(toIndentedString(tournamentMatchEvidenceId)).append("\n");
    sb.append("    tournamentMatchId: ").append(toIndentedString(tournamentMatchId)).append("\n");
    sb.append("    entityPlayerId: ").append(toIndentedString(entityPlayerId)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    fullFilePathUrl: ").append(toIndentedString(fullFilePathUrl)).append("\n");
    sb.append("    uploadDateTime: ").append(toIndentedString(uploadDateTime)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

