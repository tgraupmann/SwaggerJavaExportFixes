/*
 * Polling API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.EntityProfileModel;
import io.swagger.client.model.GamingServerRegionModel;

/**
 * TournamentMatchParticipantModel
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-02T00:05:30.138Z")
public class TournamentMatchParticipantModel {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("IsBye")
  private Boolean isBye = null;

  @SerializedName("NoShow")
  private Boolean noShow = null;

  @SerializedName("Forfeit")
  private Boolean forfeit = null;

  @SerializedName("Score")
  private Float score = null;

  @SerializedName("LiveScore")
  private Float liveScore = null;

  @SerializedName("TeamSideId")
  private Integer teamSideId = null;

  @SerializedName("TeamSideName")
  private String teamSideName = null;

  @SerializedName("CountryCode")
  private String countryCode = null;

  @SerializedName("VotedForRound")
  private Integer votedForRound = null;

  @SerializedName("HasVotedForRound")
  private Boolean hasVotedForRound = null;

  @SerializedName("Region")
  private GamingServerRegionModel region = null;

  @SerializedName("Profile")
  private EntityProfileModel profile = null;

  public TournamentMatchParticipantModel id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public TournamentMatchParticipantModel isBye(Boolean isBye) {
    this.isBye = isBye;
    return this;
  }

   /**
   * Get isBye
   * @return isBye
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsBye() {
    return isBye;
  }

  public void setIsBye(Boolean isBye) {
    this.isBye = isBye;
  }

  public TournamentMatchParticipantModel noShow(Boolean noShow) {
    this.noShow = noShow;
    return this;
  }

   /**
   * Get noShow
   * @return noShow
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getNoShow() {
    return noShow;
  }

  public void setNoShow(Boolean noShow) {
    this.noShow = noShow;
  }

  public TournamentMatchParticipantModel forfeit(Boolean forfeit) {
    this.forfeit = forfeit;
    return this;
  }

   /**
   * Get forfeit
   * @return forfeit
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getForfeit() {
    return forfeit;
  }

  public void setForfeit(Boolean forfeit) {
    this.forfeit = forfeit;
  }

  public TournamentMatchParticipantModel score(Float score) {
    this.score = score;
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @ApiModelProperty(example = "null", value = "")
  public Float getScore() {
    return score;
  }

  public void setScore(Float score) {
    this.score = score;
  }

  public TournamentMatchParticipantModel liveScore(Float liveScore) {
    this.liveScore = liveScore;
    return this;
  }

   /**
   * Get liveScore
   * @return liveScore
  **/
  @ApiModelProperty(example = "null", value = "")
  public Float getLiveScore() {
    return liveScore;
  }

  public void setLiveScore(Float liveScore) {
    this.liveScore = liveScore;
  }

  public TournamentMatchParticipantModel teamSideId(Integer teamSideId) {
    this.teamSideId = teamSideId;
    return this;
  }

   /**
   * Get teamSideId
   * @return teamSideId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTeamSideId() {
    return teamSideId;
  }

  public void setTeamSideId(Integer teamSideId) {
    this.teamSideId = teamSideId;
  }

  public TournamentMatchParticipantModel teamSideName(String teamSideName) {
    this.teamSideName = teamSideName;
    return this;
  }

   /**
   * Get teamSideName
   * @return teamSideName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTeamSideName() {
    return teamSideName;
  }

  public void setTeamSideName(String teamSideName) {
    this.teamSideName = teamSideName;
  }

  public TournamentMatchParticipantModel countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public TournamentMatchParticipantModel votedForRound(Integer votedForRound) {
    this.votedForRound = votedForRound;
    return this;
  }

   /**
   * Get votedForRound
   * @return votedForRound
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getVotedForRound() {
    return votedForRound;
  }

  public void setVotedForRound(Integer votedForRound) {
    this.votedForRound = votedForRound;
  }

   /**
   * Get hasVotedForRound
   * @return hasVotedForRound
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getHasVotedForRound() {
    return hasVotedForRound;
  }

  public TournamentMatchParticipantModel region(GamingServerRegionModel region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @ApiModelProperty(example = "null", value = "")
  public GamingServerRegionModel getRegion() {
    return region;
  }

  public void setRegion(GamingServerRegionModel region) {
    this.region = region;
  }

  public TournamentMatchParticipantModel profile(EntityProfileModel profile) {
    this.profile = profile;
    return this;
  }

   /**
   * Get profile
   * @return profile
  **/
  @ApiModelProperty(example = "null", value = "")
  public EntityProfileModel getProfile() {
    return profile;
  }

  public void setProfile(EntityProfileModel profile) {
    this.profile = profile;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TournamentMatchParticipantModel tournamentMatchParticipantModel = (TournamentMatchParticipantModel) o;
    return Objects.equals(this.id, tournamentMatchParticipantModel.id) &&
        Objects.equals(this.isBye, tournamentMatchParticipantModel.isBye) &&
        Objects.equals(this.noShow, tournamentMatchParticipantModel.noShow) &&
        Objects.equals(this.forfeit, tournamentMatchParticipantModel.forfeit) &&
        Objects.equals(this.score, tournamentMatchParticipantModel.score) &&
        Objects.equals(this.liveScore, tournamentMatchParticipantModel.liveScore) &&
        Objects.equals(this.teamSideId, tournamentMatchParticipantModel.teamSideId) &&
        Objects.equals(this.teamSideName, tournamentMatchParticipantModel.teamSideName) &&
        Objects.equals(this.countryCode, tournamentMatchParticipantModel.countryCode) &&
        Objects.equals(this.votedForRound, tournamentMatchParticipantModel.votedForRound) &&
        Objects.equals(this.hasVotedForRound, tournamentMatchParticipantModel.hasVotedForRound) &&
        Objects.equals(this.region, tournamentMatchParticipantModel.region) &&
        Objects.equals(this.profile, tournamentMatchParticipantModel.profile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, isBye, noShow, forfeit, score, liveScore, teamSideId, teamSideName, countryCode, votedForRound, hasVotedForRound, region, profile);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TournamentMatchParticipantModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isBye: ").append(toIndentedString(isBye)).append("\n");
    sb.append("    noShow: ").append(toIndentedString(noShow)).append("\n");
    sb.append("    forfeit: ").append(toIndentedString(forfeit)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    liveScore: ").append(toIndentedString(liveScore)).append("\n");
    sb.append("    teamSideId: ").append(toIndentedString(teamSideId)).append("\n");
    sb.append("    teamSideName: ").append(toIndentedString(teamSideName)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    votedForRound: ").append(toIndentedString(votedForRound)).append("\n");
    sb.append("    hasVotedForRound: ").append(toIndentedString(hasVotedForRound)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

