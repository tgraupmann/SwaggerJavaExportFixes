/*
 * Polling API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.TournamentQualifierGroupModel;
import io.swagger.client.model.TournamentQualifierTieBreakerModel;
import java.util.ArrayList;
import java.util.List;

/**
 * TournamentQualifierModel
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-02T00:05:30.138Z")
public class TournamentQualifierModel {
  @SerializedName("NumberOfGroups")
  private Integer numberOfGroups = null;

  @SerializedName("QualifierWinPoints")
  private Integer qualifierWinPoints = null;

  @SerializedName("QualifierLossPoints")
  private Integer qualifierLossPoints = null;

  @SerializedName("QualifierTiePoints")
  private Integer qualifierTiePoints = null;

  @SerializedName("Groups")
  private List<TournamentQualifierGroupModel> groups = new ArrayList<TournamentQualifierGroupModel>();

  @SerializedName("TieBreakers")
  private List<TournamentQualifierTieBreakerModel> tieBreakers = new ArrayList<TournamentQualifierTieBreakerModel>();

  public TournamentQualifierModel numberOfGroups(Integer numberOfGroups) {
    this.numberOfGroups = numberOfGroups;
    return this;
  }

   /**
   * Get numberOfGroups
   * @return numberOfGroups
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getNumberOfGroups() {
    return numberOfGroups;
  }

  public void setNumberOfGroups(Integer numberOfGroups) {
    this.numberOfGroups = numberOfGroups;
  }

  public TournamentQualifierModel qualifierWinPoints(Integer qualifierWinPoints) {
    this.qualifierWinPoints = qualifierWinPoints;
    return this;
  }

   /**
   * Get qualifierWinPoints
   * @return qualifierWinPoints
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getQualifierWinPoints() {
    return qualifierWinPoints;
  }

  public void setQualifierWinPoints(Integer qualifierWinPoints) {
    this.qualifierWinPoints = qualifierWinPoints;
  }

  public TournamentQualifierModel qualifierLossPoints(Integer qualifierLossPoints) {
    this.qualifierLossPoints = qualifierLossPoints;
    return this;
  }

   /**
   * Get qualifierLossPoints
   * @return qualifierLossPoints
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getQualifierLossPoints() {
    return qualifierLossPoints;
  }

  public void setQualifierLossPoints(Integer qualifierLossPoints) {
    this.qualifierLossPoints = qualifierLossPoints;
  }

  public TournamentQualifierModel qualifierTiePoints(Integer qualifierTiePoints) {
    this.qualifierTiePoints = qualifierTiePoints;
    return this;
  }

   /**
   * Get qualifierTiePoints
   * @return qualifierTiePoints
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getQualifierTiePoints() {
    return qualifierTiePoints;
  }

  public void setQualifierTiePoints(Integer qualifierTiePoints) {
    this.qualifierTiePoints = qualifierTiePoints;
  }

  public TournamentQualifierModel groups(List<TournamentQualifierGroupModel> groups) {
    this.groups = groups;
    return this;
  }

  public TournamentQualifierModel addGroupsItem(TournamentQualifierGroupModel groupsItem) {
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<TournamentQualifierGroupModel> getGroups() {
    return groups;
  }

  public void setGroups(List<TournamentQualifierGroupModel> groups) {
    this.groups = groups;
  }

  public TournamentQualifierModel tieBreakers(List<TournamentQualifierTieBreakerModel> tieBreakers) {
    this.tieBreakers = tieBreakers;
    return this;
  }

  public TournamentQualifierModel addTieBreakersItem(TournamentQualifierTieBreakerModel tieBreakersItem) {
    this.tieBreakers.add(tieBreakersItem);
    return this;
  }

   /**
   * Get tieBreakers
   * @return tieBreakers
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<TournamentQualifierTieBreakerModel> getTieBreakers() {
    return tieBreakers;
  }

  public void setTieBreakers(List<TournamentQualifierTieBreakerModel> tieBreakers) {
    this.tieBreakers = tieBreakers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TournamentQualifierModel tournamentQualifierModel = (TournamentQualifierModel) o;
    return Objects.equals(this.numberOfGroups, tournamentQualifierModel.numberOfGroups) &&
        Objects.equals(this.qualifierWinPoints, tournamentQualifierModel.qualifierWinPoints) &&
        Objects.equals(this.qualifierLossPoints, tournamentQualifierModel.qualifierLossPoints) &&
        Objects.equals(this.qualifierTiePoints, tournamentQualifierModel.qualifierTiePoints) &&
        Objects.equals(this.groups, tournamentQualifierModel.groups) &&
        Objects.equals(this.tieBreakers, tournamentQualifierModel.tieBreakers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numberOfGroups, qualifierWinPoints, qualifierLossPoints, qualifierTiePoints, groups, tieBreakers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TournamentQualifierModel {\n");
    
    sb.append("    numberOfGroups: ").append(toIndentedString(numberOfGroups)).append("\n");
    sb.append("    qualifierWinPoints: ").append(toIndentedString(qualifierWinPoints)).append("\n");
    sb.append("    qualifierLossPoints: ").append(toIndentedString(qualifierLossPoints)).append("\n");
    sb.append("    qualifierTiePoints: ").append(toIndentedString(qualifierTiePoints)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    tieBreakers: ").append(toIndentedString(tieBreakers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

