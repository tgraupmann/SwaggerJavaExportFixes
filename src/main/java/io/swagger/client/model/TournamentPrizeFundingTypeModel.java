/*
 * Polling API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * TournamentPrizeFundingTypeModel
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-02T00:05:30.138Z")
public class TournamentPrizeFundingTypeModel {
  @SerializedName("TournamentPrizeFundingTypeId")
  private Integer tournamentPrizeFundingTypeId = null;

  @SerializedName("TournamentPrizeFundingTypeName")
  private String tournamentPrizeFundingTypeName = null;

  public TournamentPrizeFundingTypeModel tournamentPrizeFundingTypeId(Integer tournamentPrizeFundingTypeId) {
    this.tournamentPrizeFundingTypeId = tournamentPrizeFundingTypeId;
    return this;
  }

   /**
   * Get tournamentPrizeFundingTypeId
   * @return tournamentPrizeFundingTypeId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTournamentPrizeFundingTypeId() {
    return tournamentPrizeFundingTypeId;
  }

  public void setTournamentPrizeFundingTypeId(Integer tournamentPrizeFundingTypeId) {
    this.tournamentPrizeFundingTypeId = tournamentPrizeFundingTypeId;
  }

  public TournamentPrizeFundingTypeModel tournamentPrizeFundingTypeName(String tournamentPrizeFundingTypeName) {
    this.tournamentPrizeFundingTypeName = tournamentPrizeFundingTypeName;
    return this;
  }

   /**
   * Get tournamentPrizeFundingTypeName
   * @return tournamentPrizeFundingTypeName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTournamentPrizeFundingTypeName() {
    return tournamentPrizeFundingTypeName;
  }

  public void setTournamentPrizeFundingTypeName(String tournamentPrizeFundingTypeName) {
    this.tournamentPrizeFundingTypeName = tournamentPrizeFundingTypeName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TournamentPrizeFundingTypeModel tournamentPrizeFundingTypeModel = (TournamentPrizeFundingTypeModel) o;
    return Objects.equals(this.tournamentPrizeFundingTypeId, tournamentPrizeFundingTypeModel.tournamentPrizeFundingTypeId) &&
        Objects.equals(this.tournamentPrizeFundingTypeName, tournamentPrizeFundingTypeModel.tournamentPrizeFundingTypeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tournamentPrizeFundingTypeId, tournamentPrizeFundingTypeName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TournamentPrizeFundingTypeModel {\n");
    
    sb.append("    tournamentPrizeFundingTypeId: ").append(toIndentedString(tournamentPrizeFundingTypeId)).append("\n");
    sb.append("    tournamentPrizeFundingTypeName: ").append(toIndentedString(tournamentPrizeFundingTypeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

