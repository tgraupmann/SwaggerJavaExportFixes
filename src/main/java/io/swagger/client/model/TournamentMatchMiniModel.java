/*
 * Polling API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * TournamentMatchMiniModel
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-02T00:05:30.138Z")
public class TournamentMatchMiniModel {
  @SerializedName("TournamentMatchId")
  private Long tournamentMatchId = null;

  @SerializedName("RoundNumber")
  private Integer roundNumber = null;

  @SerializedName("MatchNumber")
  private Integer matchNumber = null;

  @SerializedName("QualifierGroupNumber")
  private Integer qualifierGroupNumber = null;

  @SerializedName("RoundLevelTypeId")
  private Integer roundLevelTypeId = null;

  @SerializedName("ParticipantAName")
  private String participantAName = null;

  @SerializedName("ParticipantBName")
  private String participantBName = null;

  @SerializedName("IsFinalized")
  private Boolean isFinalized = null;

  public TournamentMatchMiniModel tournamentMatchId(Long tournamentMatchId) {
    this.tournamentMatchId = tournamentMatchId;
    return this;
  }

   /**
   * Get tournamentMatchId
   * @return tournamentMatchId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getTournamentMatchId() {
    return tournamentMatchId;
  }

  public void setTournamentMatchId(Long tournamentMatchId) {
    this.tournamentMatchId = tournamentMatchId;
  }

  public TournamentMatchMiniModel roundNumber(Integer roundNumber) {
    this.roundNumber = roundNumber;
    return this;
  }

   /**
   * Get roundNumber
   * @return roundNumber
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getRoundNumber() {
    return roundNumber;
  }

  public void setRoundNumber(Integer roundNumber) {
    this.roundNumber = roundNumber;
  }

  public TournamentMatchMiniModel matchNumber(Integer matchNumber) {
    this.matchNumber = matchNumber;
    return this;
  }

   /**
   * Get matchNumber
   * @return matchNumber
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMatchNumber() {
    return matchNumber;
  }

  public void setMatchNumber(Integer matchNumber) {
    this.matchNumber = matchNumber;
  }

  public TournamentMatchMiniModel qualifierGroupNumber(Integer qualifierGroupNumber) {
    this.qualifierGroupNumber = qualifierGroupNumber;
    return this;
  }

   /**
   * Get qualifierGroupNumber
   * @return qualifierGroupNumber
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getQualifierGroupNumber() {
    return qualifierGroupNumber;
  }

  public void setQualifierGroupNumber(Integer qualifierGroupNumber) {
    this.qualifierGroupNumber = qualifierGroupNumber;
  }

  public TournamentMatchMiniModel roundLevelTypeId(Integer roundLevelTypeId) {
    this.roundLevelTypeId = roundLevelTypeId;
    return this;
  }

   /**
   * Get roundLevelTypeId
   * @return roundLevelTypeId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getRoundLevelTypeId() {
    return roundLevelTypeId;
  }

  public void setRoundLevelTypeId(Integer roundLevelTypeId) {
    this.roundLevelTypeId = roundLevelTypeId;
  }

  public TournamentMatchMiniModel participantAName(String participantAName) {
    this.participantAName = participantAName;
    return this;
  }

   /**
   * Get participantAName
   * @return participantAName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getParticipantAName() {
    return participantAName;
  }

  public void setParticipantAName(String participantAName) {
    this.participantAName = participantAName;
  }

  public TournamentMatchMiniModel participantBName(String participantBName) {
    this.participantBName = participantBName;
    return this;
  }

   /**
   * Get participantBName
   * @return participantBName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getParticipantBName() {
    return participantBName;
  }

  public void setParticipantBName(String participantBName) {
    this.participantBName = participantBName;
  }

  public TournamentMatchMiniModel isFinalized(Boolean isFinalized) {
    this.isFinalized = isFinalized;
    return this;
  }

   /**
   * Get isFinalized
   * @return isFinalized
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsFinalized() {
    return isFinalized;
  }

  public void setIsFinalized(Boolean isFinalized) {
    this.isFinalized = isFinalized;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TournamentMatchMiniModel tournamentMatchMiniModel = (TournamentMatchMiniModel) o;
    return Objects.equals(this.tournamentMatchId, tournamentMatchMiniModel.tournamentMatchId) &&
        Objects.equals(this.roundNumber, tournamentMatchMiniModel.roundNumber) &&
        Objects.equals(this.matchNumber, tournamentMatchMiniModel.matchNumber) &&
        Objects.equals(this.qualifierGroupNumber, tournamentMatchMiniModel.qualifierGroupNumber) &&
        Objects.equals(this.roundLevelTypeId, tournamentMatchMiniModel.roundLevelTypeId) &&
        Objects.equals(this.participantAName, tournamentMatchMiniModel.participantAName) &&
        Objects.equals(this.participantBName, tournamentMatchMiniModel.participantBName) &&
        Objects.equals(this.isFinalized, tournamentMatchMiniModel.isFinalized);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tournamentMatchId, roundNumber, matchNumber, qualifierGroupNumber, roundLevelTypeId, participantAName, participantBName, isFinalized);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TournamentMatchMiniModel {\n");
    
    sb.append("    tournamentMatchId: ").append(toIndentedString(tournamentMatchId)).append("\n");
    sb.append("    roundNumber: ").append(toIndentedString(roundNumber)).append("\n");
    sb.append("    matchNumber: ").append(toIndentedString(matchNumber)).append("\n");
    sb.append("    qualifierGroupNumber: ").append(toIndentedString(qualifierGroupNumber)).append("\n");
    sb.append("    roundLevelTypeId: ").append(toIndentedString(roundLevelTypeId)).append("\n");
    sb.append("    participantAName: ").append(toIndentedString(participantAName)).append("\n");
    sb.append("    participantBName: ").append(toIndentedString(participantBName)).append("\n");
    sb.append("    isFinalized: ").append(toIndentedString(isFinalized)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

