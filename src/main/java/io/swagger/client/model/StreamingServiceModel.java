/*
 * Polling API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * StreamingServiceModel
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-02T00:05:30.138Z")
public class StreamingServiceModel {
  @SerializedName("StreamingServiceId")
  private Integer streamingServiceId = null;

  @SerializedName("StreamingService")
  private String streamingService = null;

  @SerializedName("SourceName")
  private String sourceName = null;

  public StreamingServiceModel streamingServiceId(Integer streamingServiceId) {
    this.streamingServiceId = streamingServiceId;
    return this;
  }

   /**
   * Get streamingServiceId
   * @return streamingServiceId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getStreamingServiceId() {
    return streamingServiceId;
  }

  public void setStreamingServiceId(Integer streamingServiceId) {
    this.streamingServiceId = streamingServiceId;
  }

  public StreamingServiceModel streamingService(String streamingService) {
    this.streamingService = streamingService;
    return this;
  }

   /**
   * Get streamingService
   * @return streamingService
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getStreamingService() {
    return streamingService;
  }

  public void setStreamingService(String streamingService) {
    this.streamingService = streamingService;
  }

  public StreamingServiceModel sourceName(String sourceName) {
    this.sourceName = sourceName;
    return this;
  }

   /**
   * Get sourceName
   * @return sourceName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSourceName() {
    return sourceName;
  }

  public void setSourceName(String sourceName) {
    this.sourceName = sourceName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StreamingServiceModel streamingServiceModel = (StreamingServiceModel) o;
    return Objects.equals(this.streamingServiceId, streamingServiceModel.streamingServiceId) &&
        Objects.equals(this.streamingService, streamingServiceModel.streamingService) &&
        Objects.equals(this.sourceName, streamingServiceModel.sourceName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(streamingServiceId, streamingService, sourceName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StreamingServiceModel {\n");
    
    sb.append("    streamingServiceId: ").append(toIndentedString(streamingServiceId)).append("\n");
    sb.append("    streamingService: ").append(toIndentedString(streamingService)).append("\n");
    sb.append("    sourceName: ").append(toIndentedString(sourceName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

