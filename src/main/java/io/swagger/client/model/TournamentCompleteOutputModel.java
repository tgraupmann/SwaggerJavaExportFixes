/*
 * Polling API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AddressCountryModel;
import io.swagger.client.model.EntityAdministratorProfileModel;
import io.swagger.client.model.EntityProfileModel;
import io.swagger.client.model.GameTitleOutputModel;
import io.swagger.client.model.TournamentAnnouncementModel;
import io.swagger.client.model.TournamentManagementPolicyModel;
import io.swagger.client.model.TournamentMatchModel;
import io.swagger.client.model.TournamentParticipantModel;
import io.swagger.client.model.TournamentPayoutModel;
import io.swagger.client.model.TournamentPredefinedStreamedMatchesModel;
import io.swagger.client.model.TournamentQualifierModel;
import io.swagger.client.model.TournamentRoundRulesCompleteOutputModel;
import io.swagger.client.model.TournamentSponsorsModel;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;

/**
 * TournamentCompleteOutputModel
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-02T00:05:30.138Z")
public class TournamentCompleteOutputModel {
  @SerializedName("GenerationTicks")
  private Long generationTicks = null;

  @SerializedName("RulesTitle")
  private String rulesTitle = null;

  @SerializedName("RulesDescription")
  private String rulesDescription = null;

  @SerializedName("Administrators")
  private List<EntityAdministratorProfileModel> administrators = new ArrayList<EntityAdministratorProfileModel>();

  @SerializedName("EntityOwnerProfile")
  private EntityProfileModel entityOwnerProfile = null;

  @SerializedName("Participants")
  private List<TournamentParticipantModel> participants = new ArrayList<TournamentParticipantModel>();

  @SerializedName("Matches")
  private List<TournamentMatchModel> matches = new ArrayList<TournamentMatchModel>();

  @SerializedName("Payouts")
  private List<TournamentPayoutModel> payouts = new ArrayList<TournamentPayoutModel>();

  @SerializedName("RoundRules")
  private List<TournamentRoundRulesCompleteOutputModel> roundRules = new ArrayList<TournamentRoundRulesCompleteOutputModel>();

  @SerializedName("TournamentManagementPolicy")
  private TournamentManagementPolicyModel tournamentManagementPolicy = null;

  @SerializedName("TournamentStateId")
  private Integer tournamentStateId = null;

  @SerializedName("IsPublished")
  private Boolean isPublished = null;

  @SerializedName("GameName")
  private String gameName = null;

  @SerializedName("EntityOwnerId")
  private Long entityOwnerId = null;

  @SerializedName("DeveloperPartnerId")
  private Integer developerPartnerId = null;

  @SerializedName("GameTitleRulesId")
  private Integer gameTitleRulesId = null;

  @SerializedName("IsApproved")
  private Boolean isApproved = null;

  @SerializedName("IsRealCurrency")
  private Boolean isRealCurrency = null;

  @SerializedName("EntityApprovedById")
  private Long entityApprovedById = null;

  @SerializedName("ResultIsFinalized")
  private Boolean resultIsFinalized = null;

  @SerializedName("EntityResultFinalizedById")
  private Long entityResultFinalizedById = null;

  @SerializedName("TournamentPassword")
  private String tournamentPassword = null;

  @SerializedName("TournamentJoinTypeId")
  private Integer tournamentJoinTypeId = null;

  @SerializedName("TournamentJoinTypeName")
  private String tournamentJoinTypeName = null;

  @SerializedName("PrizePoolAmount")
  private Double prizePoolAmount = null;

  @SerializedName("TournamentPrizeFundingTypeId")
  private Integer tournamentPrizeFundingTypeId = null;

  @SerializedName("TournamentPrizeFundingTypeName")
  private String tournamentPrizeFundingTypeName = null;

  @SerializedName("PercentOfEntryFeeToPrizePool")
  private Float percentOfEntryFeeToPrizePool = null;

  @SerializedName("DoesCycle")
  private Boolean doesCycle = null;

  @SerializedName("CycleLengthInMinutes")
  private Integer cycleLengthInMinutes = null;

  @SerializedName("CycleMinutesBeforeStart")
  private Integer cycleMinutesBeforeStart = null;

  @SerializedName("MaxCycleCount")
  private Integer maxCycleCount = null;

  @SerializedName("CycleCount")
  private Integer cycleCount = null;

  @SerializedName("HasCycled")
  private Boolean hasCycled = null;

  @SerializedName("CycledTournamentId")
  private Long cycledTournamentId = null;

  @SerializedName("CanOnlyRegisterFromRegionId")
  private Integer canOnlyRegisterFromRegionId = null;

  @SerializedName("CanOnlyRegisterFromRegionName")
  private String canOnlyRegisterFromRegionName = null;

  @SerializedName("GamingServerRegionName")
  private String gamingServerRegionName = null;

  @SerializedName("RoundRobinIsComplete")
  private Boolean roundRobinIsComplete = null;

  @SerializedName("TournamentSeedingTypeId")
  private Integer tournamentSeedingTypeId = null;

  @SerializedName("TournamentPairingTypeId")
  private Integer tournamentPairingTypeId = null;

  @SerializedName("PayoutCount")
  private Integer payoutCount = null;

  @SerializedName("AutomaticGoLiveOnSchedule")
  private Boolean automaticGoLiveOnSchedule = null;

  @SerializedName("MinutesAfterStartToForfeit")
  private Integer minutesAfterStartToForfeit = null;

  @SerializedName("MinutesBeforeStartToAllowCheckin")
  private Integer minutesBeforeStartToAllowCheckin = null;

  @SerializedName("Sponsors")
  private TournamentSponsorsModel sponsors = null;

  @SerializedName("Announcements")
  private List<TournamentAnnouncementModel> announcements = new ArrayList<TournamentAnnouncementModel>();

  @SerializedName("CreatedDateTime")
  private DateTime createdDateTime = null;

  @SerializedName("DeveloperId")
  private Integer developerId = null;

  @SerializedName("GameTitleStateId")
  private Integer gameTitleStateId = null;

  @SerializedName("AllMatchesRunManualMode")
  private Boolean allMatchesRunManualMode = null;

  @SerializedName("ThirdPartyTournamentId")
  private String thirdPartyTournamentId = null;

  @SerializedName("ThirdPartyApiRegion")
  private String thirdPartyApiRegion = null;

  @SerializedName("ThirdPartyTournamentConfiguration")
  private String thirdPartyTournamentConfiguration = null;

  @SerializedName("LogoListUrl")
  private String logoListUrl = null;

  @SerializedName("LogoListRelativeUrl")
  private String logoListRelativeUrl = null;

  @SerializedName("LogoHomeUrl")
  private String logoHomeUrl = null;

  @SerializedName("LogoHomeRelativeUrl")
  private String logoHomeRelativeUrl = null;

  @SerializedName("LogoFeaturedUrl")
  private String logoFeaturedUrl = null;

  @SerializedName("LogoFeaturedRelativeUrl")
  private String logoFeaturedRelativeUrl = null;

  @SerializedName("ServerConfigurationFileName")
  private String serverConfigurationFileName = null;

  @SerializedName("AllowPreCheckin")
  private Boolean allowPreCheckin = null;

  @SerializedName("PreCheckinMinutesBeforeStart")
  private Integer preCheckinMinutesBeforeStart = null;

  @SerializedName("StandByParticipantCount")
  private Integer standByParticipantCount = null;

  @SerializedName("IsPreCheckinAvailable")
  private Boolean isPreCheckinAvailable = null;

  @SerializedName("Qualifier")
  private TournamentQualifierModel qualifier = null;

  @SerializedName("TournamentManagementPolicyId")
  private Integer tournamentManagementPolicyId = null;

  @SerializedName("PredefinedStreamedMatches")
  private List<TournamentPredefinedStreamedMatchesModel> predefinedStreamedMatches = new ArrayList<TournamentPredefinedStreamedMatchesModel>();

  @SerializedName("LanModeEnabled")
  private Boolean lanModeEnabled = null;

  @SerializedName("EnableLanTagging")
  private Boolean enableLanTagging = null;

  @SerializedName("LanTag")
  private String lanTag = null;

  @SerializedName("AllowedCountryIds")
  private List<Integer> allowedCountryIds = new ArrayList<Integer>();

  @SerializedName("AllowedCountryList")
  private List<AddressCountryModel> allowedCountryList = new ArrayList<AddressCountryModel>();

  @SerializedName("PauseIfQualifierEndsInTie")
  private Boolean pauseIfQualifierEndsInTie = null;

  @SerializedName("IsPausedForTiedQualifierFinish")
  private Boolean isPausedForTiedQualifierFinish = null;

  @SerializedName("IsPausedForTiedQualifierFinishDateTime")
  private DateTime isPausedForTiedQualifierFinishDateTime = null;

  @SerializedName("QualifierTiedFinishIsResolved")
  private Boolean qualifierTiedFinishIsResolved = null;

  @SerializedName("QualifierTiedFinishIsResolvedDateTime")
  private DateTime qualifierTiedFinishIsResolvedDateTime = null;

  @SerializedName("QualifierTiedFinishIsResolvedByAdministratorId")
  private Long qualifierTiedFinishIsResolvedByAdministratorId = null;

  @SerializedName("QualifierTiedFinishIsResolvedByAdministratorProfile")
  private EntityProfileModel qualifierTiedFinishIsResolvedByAdministratorProfile = null;

  @SerializedName("TournamentIsComplete")
  private Boolean tournamentIsComplete = null;

  @SerializedName("TournamentIsLive")
  private Boolean tournamentIsLive = null;

  @SerializedName("TournamentLiveDateTime")
  private DateTime tournamentLiveDateTime = null;

  @SerializedName("TournamentId")
  private Long tournamentId = null;

  @SerializedName("TournamentTitle")
  private String tournamentTitle = null;

  @SerializedName("TournamentSubTitle")
  private String tournamentSubTitle = null;

  @SerializedName("HighlightColor")
  private String highlightColor = null;

  @SerializedName("TournamentDescription")
  private String tournamentDescription = null;

  @SerializedName("MatchConnectionInstructions")
  private String matchConnectionInstructions = null;

  @SerializedName("GameTitleId")
  private Integer gameTitleId = null;

  @SerializedName("IsTeamTournament")
  private Boolean isTeamTournament = null;

  @SerializedName("MinimumNumberOfEntities")
  private Integer minimumNumberOfEntities = null;

  @SerializedName("MaximumNumberOfEntities")
  private Integer maximumNumberOfEntities = null;

  @SerializedName("TeamSize")
  private Integer teamSize = null;

  @SerializedName("TournamentTypeId")
  private Integer tournamentTypeId = null;

  @SerializedName("OriginalTournamentTypeId")
  private Integer originalTournamentTypeId = null;

  @SerializedName("TournamentTypeName")
  private String tournamentTypeName = null;

  @SerializedName("TournamentFeeAmount")
  private Double tournamentFeeAmount = null;

  @SerializedName("TournamentStartDateTime")
  private DateTime tournamentStartDateTime = null;

  @SerializedName("TournamentEndDateTime")
  private DateTime tournamentEndDateTime = null;

  @SerializedName("RegistrationCutoffDateTime")
  private DateTime registrationCutoffDateTime = null;

  @SerializedName("IsPublic")
  private Boolean isPublic = null;

  @SerializedName("IsFavorite")
  private Boolean isFavorite = null;

  @SerializedName("EnableMatchLobby")
  private Boolean enableMatchLobby = null;

  @SerializedName("LogoIsBorderless")
  private Boolean logoIsBorderless = null;

  @SerializedName("LogoUrl")
  private String logoUrl = null;

  @SerializedName("BackgroundUrl")
  private String backgroundUrl = null;

  @SerializedName("LogoRelativeUrl")
  private String logoRelativeUrl = null;

  @SerializedName("BackgroundRelativeUrl")
  private String backgroundRelativeUrl = null;

  @SerializedName("BackgroundHomeUrl")
  private String backgroundHomeUrl = null;

  @SerializedName("BackgroundHomeRelativeUrl")
  private String backgroundHomeRelativeUrl = null;

  @SerializedName("BackgroundSearchUrl")
  private String backgroundSearchUrl = null;

  @SerializedName("BackgroundSearchRelativeUrl")
  private String backgroundSearchRelativeUrl = null;

  @SerializedName("JoinPasswordRequired")
  private Boolean joinPasswordRequired = null;

  @SerializedName("HasConsolationRound")
  private Boolean hasConsolationRound = null;

  @SerializedName("CurrentNumberOfParticipants")
  private Integer currentNumberOfParticipants = null;

  @SerializedName("Game")
  private GameTitleOutputModel game = null;

  @SerializedName("LastUpdatedDateTime")
  private DateTime lastUpdatedDateTime = null;

  @SerializedName("WebsiteUrl")
  private String websiteUrl = null;

  @SerializedName("FacebookUrl")
  private String facebookUrl = null;

  @SerializedName("TwitchUrl")
  private String twitchUrl = null;

  @SerializedName("InstagramUrl")
  private String instagramUrl = null;

  @SerializedName("TwitterUrl")
  private String twitterUrl = null;

  public TournamentCompleteOutputModel generationTicks(Long generationTicks) {
    this.generationTicks = generationTicks;
    return this;
  }

   /**
   * Get generationTicks
   * @return generationTicks
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getGenerationTicks() {
    return generationTicks;
  }

  public void setGenerationTicks(Long generationTicks) {
    this.generationTicks = generationTicks;
  }

  public TournamentCompleteOutputModel rulesTitle(String rulesTitle) {
    this.rulesTitle = rulesTitle;
    return this;
  }

   /**
   * Get rulesTitle
   * @return rulesTitle
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getRulesTitle() {
    return rulesTitle;
  }

  public void setRulesTitle(String rulesTitle) {
    this.rulesTitle = rulesTitle;
  }

  public TournamentCompleteOutputModel rulesDescription(String rulesDescription) {
    this.rulesDescription = rulesDescription;
    return this;
  }

   /**
   * Get rulesDescription
   * @return rulesDescription
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getRulesDescription() {
    return rulesDescription;
  }

  public void setRulesDescription(String rulesDescription) {
    this.rulesDescription = rulesDescription;
  }

  public TournamentCompleteOutputModel administrators(List<EntityAdministratorProfileModel> administrators) {
    this.administrators = administrators;
    return this;
  }

  public TournamentCompleteOutputModel addAdministratorsItem(EntityAdministratorProfileModel administratorsItem) {
    this.administrators.add(administratorsItem);
    return this;
  }

   /**
   * Get administrators
   * @return administrators
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<EntityAdministratorProfileModel> getAdministrators() {
    return administrators;
  }

  public void setAdministrators(List<EntityAdministratorProfileModel> administrators) {
    this.administrators = administrators;
  }

  public TournamentCompleteOutputModel entityOwnerProfile(EntityProfileModel entityOwnerProfile) {
    this.entityOwnerProfile = entityOwnerProfile;
    return this;
  }

   /**
   * Get entityOwnerProfile
   * @return entityOwnerProfile
  **/
  @ApiModelProperty(example = "null", value = "")
  public EntityProfileModel getEntityOwnerProfile() {
    return entityOwnerProfile;
  }

  public void setEntityOwnerProfile(EntityProfileModel entityOwnerProfile) {
    this.entityOwnerProfile = entityOwnerProfile;
  }

  public TournamentCompleteOutputModel participants(List<TournamentParticipantModel> participants) {
    this.participants = participants;
    return this;
  }

  public TournamentCompleteOutputModel addParticipantsItem(TournamentParticipantModel participantsItem) {
    this.participants.add(participantsItem);
    return this;
  }

   /**
   * Get participants
   * @return participants
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<TournamentParticipantModel> getParticipants() {
    return participants;
  }

  public void setParticipants(List<TournamentParticipantModel> participants) {
    this.participants = participants;
  }

  public TournamentCompleteOutputModel matches(List<TournamentMatchModel> matches) {
    this.matches = matches;
    return this;
  }

  public TournamentCompleteOutputModel addMatchesItem(TournamentMatchModel matchesItem) {
    this.matches.add(matchesItem);
    return this;
  }

   /**
   * Get matches
   * @return matches
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<TournamentMatchModel> getMatches() {
    return matches;
  }

  public void setMatches(List<TournamentMatchModel> matches) {
    this.matches = matches;
  }

  public TournamentCompleteOutputModel payouts(List<TournamentPayoutModel> payouts) {
    this.payouts = payouts;
    return this;
  }

  public TournamentCompleteOutputModel addPayoutsItem(TournamentPayoutModel payoutsItem) {
    this.payouts.add(payoutsItem);
    return this;
  }

   /**
   * Get payouts
   * @return payouts
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<TournamentPayoutModel> getPayouts() {
    return payouts;
  }

  public void setPayouts(List<TournamentPayoutModel> payouts) {
    this.payouts = payouts;
  }

  public TournamentCompleteOutputModel roundRules(List<TournamentRoundRulesCompleteOutputModel> roundRules) {
    this.roundRules = roundRules;
    return this;
  }

  public TournamentCompleteOutputModel addRoundRulesItem(TournamentRoundRulesCompleteOutputModel roundRulesItem) {
    this.roundRules.add(roundRulesItem);
    return this;
  }

   /**
   * Get roundRules
   * @return roundRules
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<TournamentRoundRulesCompleteOutputModel> getRoundRules() {
    return roundRules;
  }

  public void setRoundRules(List<TournamentRoundRulesCompleteOutputModel> roundRules) {
    this.roundRules = roundRules;
  }

  public TournamentCompleteOutputModel tournamentManagementPolicy(TournamentManagementPolicyModel tournamentManagementPolicy) {
    this.tournamentManagementPolicy = tournamentManagementPolicy;
    return this;
  }

   /**
   * Get tournamentManagementPolicy
   * @return tournamentManagementPolicy
  **/
  @ApiModelProperty(example = "null", value = "")
  public TournamentManagementPolicyModel getTournamentManagementPolicy() {
    return tournamentManagementPolicy;
  }

  public void setTournamentManagementPolicy(TournamentManagementPolicyModel tournamentManagementPolicy) {
    this.tournamentManagementPolicy = tournamentManagementPolicy;
  }

   /**
   * Get tournamentStateId
   * @return tournamentStateId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTournamentStateId() {
    return tournamentStateId;
  }

  public TournamentCompleteOutputModel isPublished(Boolean isPublished) {
    this.isPublished = isPublished;
    return this;
  }

   /**
   * Get isPublished
   * @return isPublished
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsPublished() {
    return isPublished;
  }

  public void setIsPublished(Boolean isPublished) {
    this.isPublished = isPublished;
  }

  public TournamentCompleteOutputModel gameName(String gameName) {
    this.gameName = gameName;
    return this;
  }

   /**
   * Get gameName
   * @return gameName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getGameName() {
    return gameName;
  }

  public void setGameName(String gameName) {
    this.gameName = gameName;
  }

  public TournamentCompleteOutputModel entityOwnerId(Long entityOwnerId) {
    this.entityOwnerId = entityOwnerId;
    return this;
  }

   /**
   * Get entityOwnerId
   * @return entityOwnerId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getEntityOwnerId() {
    return entityOwnerId;
  }

  public void setEntityOwnerId(Long entityOwnerId) {
    this.entityOwnerId = entityOwnerId;
  }

  public TournamentCompleteOutputModel developerPartnerId(Integer developerPartnerId) {
    this.developerPartnerId = developerPartnerId;
    return this;
  }

   /**
   * Get developerPartnerId
   * @return developerPartnerId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getDeveloperPartnerId() {
    return developerPartnerId;
  }

  public void setDeveloperPartnerId(Integer developerPartnerId) {
    this.developerPartnerId = developerPartnerId;
  }

  public TournamentCompleteOutputModel gameTitleRulesId(Integer gameTitleRulesId) {
    this.gameTitleRulesId = gameTitleRulesId;
    return this;
  }

   /**
   * Get gameTitleRulesId
   * @return gameTitleRulesId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getGameTitleRulesId() {
    return gameTitleRulesId;
  }

  public void setGameTitleRulesId(Integer gameTitleRulesId) {
    this.gameTitleRulesId = gameTitleRulesId;
  }

  public TournamentCompleteOutputModel isApproved(Boolean isApproved) {
    this.isApproved = isApproved;
    return this;
  }

   /**
   * Get isApproved
   * @return isApproved
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsApproved() {
    return isApproved;
  }

  public void setIsApproved(Boolean isApproved) {
    this.isApproved = isApproved;
  }

  public TournamentCompleteOutputModel isRealCurrency(Boolean isRealCurrency) {
    this.isRealCurrency = isRealCurrency;
    return this;
  }

   /**
   * Get isRealCurrency
   * @return isRealCurrency
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsRealCurrency() {
    return isRealCurrency;
  }

  public void setIsRealCurrency(Boolean isRealCurrency) {
    this.isRealCurrency = isRealCurrency;
  }

  public TournamentCompleteOutputModel entityApprovedById(Long entityApprovedById) {
    this.entityApprovedById = entityApprovedById;
    return this;
  }

   /**
   * Get entityApprovedById
   * @return entityApprovedById
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getEntityApprovedById() {
    return entityApprovedById;
  }

  public void setEntityApprovedById(Long entityApprovedById) {
    this.entityApprovedById = entityApprovedById;
  }

  public TournamentCompleteOutputModel resultIsFinalized(Boolean resultIsFinalized) {
    this.resultIsFinalized = resultIsFinalized;
    return this;
  }

   /**
   * Get resultIsFinalized
   * @return resultIsFinalized
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getResultIsFinalized() {
    return resultIsFinalized;
  }

  public void setResultIsFinalized(Boolean resultIsFinalized) {
    this.resultIsFinalized = resultIsFinalized;
  }

  public TournamentCompleteOutputModel entityResultFinalizedById(Long entityResultFinalizedById) {
    this.entityResultFinalizedById = entityResultFinalizedById;
    return this;
  }

   /**
   * Get entityResultFinalizedById
   * @return entityResultFinalizedById
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getEntityResultFinalizedById() {
    return entityResultFinalizedById;
  }

  public void setEntityResultFinalizedById(Long entityResultFinalizedById) {
    this.entityResultFinalizedById = entityResultFinalizedById;
  }

  public TournamentCompleteOutputModel tournamentPassword(String tournamentPassword) {
    this.tournamentPassword = tournamentPassword;
    return this;
  }

   /**
   * Get tournamentPassword
   * @return tournamentPassword
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTournamentPassword() {
    return tournamentPassword;
  }

  public void setTournamentPassword(String tournamentPassword) {
    this.tournamentPassword = tournamentPassword;
  }

  public TournamentCompleteOutputModel tournamentJoinTypeId(Integer tournamentJoinTypeId) {
    this.tournamentJoinTypeId = tournamentJoinTypeId;
    return this;
  }

   /**
   * Get tournamentJoinTypeId
   * @return tournamentJoinTypeId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTournamentJoinTypeId() {
    return tournamentJoinTypeId;
  }

  public void setTournamentJoinTypeId(Integer tournamentJoinTypeId) {
    this.tournamentJoinTypeId = tournamentJoinTypeId;
  }

  public TournamentCompleteOutputModel tournamentJoinTypeName(String tournamentJoinTypeName) {
    this.tournamentJoinTypeName = tournamentJoinTypeName;
    return this;
  }

   /**
   * Get tournamentJoinTypeName
   * @return tournamentJoinTypeName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTournamentJoinTypeName() {
    return tournamentJoinTypeName;
  }

  public void setTournamentJoinTypeName(String tournamentJoinTypeName) {
    this.tournamentJoinTypeName = tournamentJoinTypeName;
  }

  public TournamentCompleteOutputModel prizePoolAmount(Double prizePoolAmount) {
    this.prizePoolAmount = prizePoolAmount;
    return this;
  }

   /**
   * Get prizePoolAmount
   * @return prizePoolAmount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getPrizePoolAmount() {
    return prizePoolAmount;
  }

  public void setPrizePoolAmount(Double prizePoolAmount) {
    this.prizePoolAmount = prizePoolAmount;
  }

  public TournamentCompleteOutputModel tournamentPrizeFundingTypeId(Integer tournamentPrizeFundingTypeId) {
    this.tournamentPrizeFundingTypeId = tournamentPrizeFundingTypeId;
    return this;
  }

   /**
   * Get tournamentPrizeFundingTypeId
   * @return tournamentPrizeFundingTypeId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTournamentPrizeFundingTypeId() {
    return tournamentPrizeFundingTypeId;
  }

  public void setTournamentPrizeFundingTypeId(Integer tournamentPrizeFundingTypeId) {
    this.tournamentPrizeFundingTypeId = tournamentPrizeFundingTypeId;
  }

  public TournamentCompleteOutputModel tournamentPrizeFundingTypeName(String tournamentPrizeFundingTypeName) {
    this.tournamentPrizeFundingTypeName = tournamentPrizeFundingTypeName;
    return this;
  }

   /**
   * Get tournamentPrizeFundingTypeName
   * @return tournamentPrizeFundingTypeName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTournamentPrizeFundingTypeName() {
    return tournamentPrizeFundingTypeName;
  }

  public void setTournamentPrizeFundingTypeName(String tournamentPrizeFundingTypeName) {
    this.tournamentPrizeFundingTypeName = tournamentPrizeFundingTypeName;
  }

  public TournamentCompleteOutputModel percentOfEntryFeeToPrizePool(Float percentOfEntryFeeToPrizePool) {
    this.percentOfEntryFeeToPrizePool = percentOfEntryFeeToPrizePool;
    return this;
  }

   /**
   * Get percentOfEntryFeeToPrizePool
   * @return percentOfEntryFeeToPrizePool
  **/
  @ApiModelProperty(example = "null", value = "")
  public Float getPercentOfEntryFeeToPrizePool() {
    return percentOfEntryFeeToPrizePool;
  }

  public void setPercentOfEntryFeeToPrizePool(Float percentOfEntryFeeToPrizePool) {
    this.percentOfEntryFeeToPrizePool = percentOfEntryFeeToPrizePool;
  }

  public TournamentCompleteOutputModel doesCycle(Boolean doesCycle) {
    this.doesCycle = doesCycle;
    return this;
  }

   /**
   * Get doesCycle
   * @return doesCycle
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getDoesCycle() {
    return doesCycle;
  }

  public void setDoesCycle(Boolean doesCycle) {
    this.doesCycle = doesCycle;
  }

  public TournamentCompleteOutputModel cycleLengthInMinutes(Integer cycleLengthInMinutes) {
    this.cycleLengthInMinutes = cycleLengthInMinutes;
    return this;
  }

   /**
   * Get cycleLengthInMinutes
   * @return cycleLengthInMinutes
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getCycleLengthInMinutes() {
    return cycleLengthInMinutes;
  }

  public void setCycleLengthInMinutes(Integer cycleLengthInMinutes) {
    this.cycleLengthInMinutes = cycleLengthInMinutes;
  }

  public TournamentCompleteOutputModel cycleMinutesBeforeStart(Integer cycleMinutesBeforeStart) {
    this.cycleMinutesBeforeStart = cycleMinutesBeforeStart;
    return this;
  }

   /**
   * Get cycleMinutesBeforeStart
   * @return cycleMinutesBeforeStart
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getCycleMinutesBeforeStart() {
    return cycleMinutesBeforeStart;
  }

  public void setCycleMinutesBeforeStart(Integer cycleMinutesBeforeStart) {
    this.cycleMinutesBeforeStart = cycleMinutesBeforeStart;
  }

  public TournamentCompleteOutputModel maxCycleCount(Integer maxCycleCount) {
    this.maxCycleCount = maxCycleCount;
    return this;
  }

   /**
   * Get maxCycleCount
   * @return maxCycleCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMaxCycleCount() {
    return maxCycleCount;
  }

  public void setMaxCycleCount(Integer maxCycleCount) {
    this.maxCycleCount = maxCycleCount;
  }

  public TournamentCompleteOutputModel cycleCount(Integer cycleCount) {
    this.cycleCount = cycleCount;
    return this;
  }

   /**
   * Get cycleCount
   * @return cycleCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getCycleCount() {
    return cycleCount;
  }

  public void setCycleCount(Integer cycleCount) {
    this.cycleCount = cycleCount;
  }

  public TournamentCompleteOutputModel hasCycled(Boolean hasCycled) {
    this.hasCycled = hasCycled;
    return this;
  }

   /**
   * Get hasCycled
   * @return hasCycled
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getHasCycled() {
    return hasCycled;
  }

  public void setHasCycled(Boolean hasCycled) {
    this.hasCycled = hasCycled;
  }

  public TournamentCompleteOutputModel cycledTournamentId(Long cycledTournamentId) {
    this.cycledTournamentId = cycledTournamentId;
    return this;
  }

   /**
   * Get cycledTournamentId
   * @return cycledTournamentId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getCycledTournamentId() {
    return cycledTournamentId;
  }

  public void setCycledTournamentId(Long cycledTournamentId) {
    this.cycledTournamentId = cycledTournamentId;
  }

  public TournamentCompleteOutputModel canOnlyRegisterFromRegionId(Integer canOnlyRegisterFromRegionId) {
    this.canOnlyRegisterFromRegionId = canOnlyRegisterFromRegionId;
    return this;
  }

   /**
   * Get canOnlyRegisterFromRegionId
   * @return canOnlyRegisterFromRegionId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getCanOnlyRegisterFromRegionId() {
    return canOnlyRegisterFromRegionId;
  }

  public void setCanOnlyRegisterFromRegionId(Integer canOnlyRegisterFromRegionId) {
    this.canOnlyRegisterFromRegionId = canOnlyRegisterFromRegionId;
  }

  public TournamentCompleteOutputModel canOnlyRegisterFromRegionName(String canOnlyRegisterFromRegionName) {
    this.canOnlyRegisterFromRegionName = canOnlyRegisterFromRegionName;
    return this;
  }

   /**
   * Get canOnlyRegisterFromRegionName
   * @return canOnlyRegisterFromRegionName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCanOnlyRegisterFromRegionName() {
    return canOnlyRegisterFromRegionName;
  }

  public void setCanOnlyRegisterFromRegionName(String canOnlyRegisterFromRegionName) {
    this.canOnlyRegisterFromRegionName = canOnlyRegisterFromRegionName;
  }

  public TournamentCompleteOutputModel gamingServerRegionName(String gamingServerRegionName) {
    this.gamingServerRegionName = gamingServerRegionName;
    return this;
  }

   /**
   * Get gamingServerRegionName
   * @return gamingServerRegionName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getGamingServerRegionName() {
    return gamingServerRegionName;
  }

  public void setGamingServerRegionName(String gamingServerRegionName) {
    this.gamingServerRegionName = gamingServerRegionName;
  }

  public TournamentCompleteOutputModel roundRobinIsComplete(Boolean roundRobinIsComplete) {
    this.roundRobinIsComplete = roundRobinIsComplete;
    return this;
  }

   /**
   * Get roundRobinIsComplete
   * @return roundRobinIsComplete
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getRoundRobinIsComplete() {
    return roundRobinIsComplete;
  }

  public void setRoundRobinIsComplete(Boolean roundRobinIsComplete) {
    this.roundRobinIsComplete = roundRobinIsComplete;
  }

  public TournamentCompleteOutputModel tournamentSeedingTypeId(Integer tournamentSeedingTypeId) {
    this.tournamentSeedingTypeId = tournamentSeedingTypeId;
    return this;
  }

   /**
   * Get tournamentSeedingTypeId
   * @return tournamentSeedingTypeId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTournamentSeedingTypeId() {
    return tournamentSeedingTypeId;
  }

  public void setTournamentSeedingTypeId(Integer tournamentSeedingTypeId) {
    this.tournamentSeedingTypeId = tournamentSeedingTypeId;
  }

  public TournamentCompleteOutputModel tournamentPairingTypeId(Integer tournamentPairingTypeId) {
    this.tournamentPairingTypeId = tournamentPairingTypeId;
    return this;
  }

   /**
   * Get tournamentPairingTypeId
   * @return tournamentPairingTypeId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTournamentPairingTypeId() {
    return tournamentPairingTypeId;
  }

  public void setTournamentPairingTypeId(Integer tournamentPairingTypeId) {
    this.tournamentPairingTypeId = tournamentPairingTypeId;
  }

  public TournamentCompleteOutputModel payoutCount(Integer payoutCount) {
    this.payoutCount = payoutCount;
    return this;
  }

   /**
   * Get payoutCount
   * @return payoutCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getPayoutCount() {
    return payoutCount;
  }

  public void setPayoutCount(Integer payoutCount) {
    this.payoutCount = payoutCount;
  }

  public TournamentCompleteOutputModel automaticGoLiveOnSchedule(Boolean automaticGoLiveOnSchedule) {
    this.automaticGoLiveOnSchedule = automaticGoLiveOnSchedule;
    return this;
  }

   /**
   * Get automaticGoLiveOnSchedule
   * @return automaticGoLiveOnSchedule
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getAutomaticGoLiveOnSchedule() {
    return automaticGoLiveOnSchedule;
  }

  public void setAutomaticGoLiveOnSchedule(Boolean automaticGoLiveOnSchedule) {
    this.automaticGoLiveOnSchedule = automaticGoLiveOnSchedule;
  }

  public TournamentCompleteOutputModel minutesAfterStartToForfeit(Integer minutesAfterStartToForfeit) {
    this.minutesAfterStartToForfeit = minutesAfterStartToForfeit;
    return this;
  }

   /**
   * Get minutesAfterStartToForfeit
   * @return minutesAfterStartToForfeit
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMinutesAfterStartToForfeit() {
    return minutesAfterStartToForfeit;
  }

  public void setMinutesAfterStartToForfeit(Integer minutesAfterStartToForfeit) {
    this.minutesAfterStartToForfeit = minutesAfterStartToForfeit;
  }

  public TournamentCompleteOutputModel minutesBeforeStartToAllowCheckin(Integer minutesBeforeStartToAllowCheckin) {
    this.minutesBeforeStartToAllowCheckin = minutesBeforeStartToAllowCheckin;
    return this;
  }

   /**
   * Get minutesBeforeStartToAllowCheckin
   * @return minutesBeforeStartToAllowCheckin
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMinutesBeforeStartToAllowCheckin() {
    return minutesBeforeStartToAllowCheckin;
  }

  public void setMinutesBeforeStartToAllowCheckin(Integer minutesBeforeStartToAllowCheckin) {
    this.minutesBeforeStartToAllowCheckin = minutesBeforeStartToAllowCheckin;
  }

  public TournamentCompleteOutputModel sponsors(TournamentSponsorsModel sponsors) {
    this.sponsors = sponsors;
    return this;
  }

   /**
   * Get sponsors
   * @return sponsors
  **/
  @ApiModelProperty(example = "null", value = "")
  public TournamentSponsorsModel getSponsors() {
    return sponsors;
  }

  public void setSponsors(TournamentSponsorsModel sponsors) {
    this.sponsors = sponsors;
  }

  public TournamentCompleteOutputModel announcements(List<TournamentAnnouncementModel> announcements) {
    this.announcements = announcements;
    return this;
  }

  public TournamentCompleteOutputModel addAnnouncementsItem(TournamentAnnouncementModel announcementsItem) {
    this.announcements.add(announcementsItem);
    return this;
  }

   /**
   * Get announcements
   * @return announcements
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<TournamentAnnouncementModel> getAnnouncements() {
    return announcements;
  }

  public void setAnnouncements(List<TournamentAnnouncementModel> announcements) {
    this.announcements = announcements;
  }

  public TournamentCompleteOutputModel createdDateTime(DateTime createdDateTime) {
    this.createdDateTime = createdDateTime;
    return this;
  }

   /**
   * Get createdDateTime
   * @return createdDateTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getCreatedDateTime() {
    return createdDateTime;
  }

  public void setCreatedDateTime(DateTime createdDateTime) {
    this.createdDateTime = createdDateTime;
  }

  public TournamentCompleteOutputModel developerId(Integer developerId) {
    this.developerId = developerId;
    return this;
  }

   /**
   * Get developerId
   * @return developerId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getDeveloperId() {
    return developerId;
  }

  public void setDeveloperId(Integer developerId) {
    this.developerId = developerId;
  }

  public TournamentCompleteOutputModel gameTitleStateId(Integer gameTitleStateId) {
    this.gameTitleStateId = gameTitleStateId;
    return this;
  }

   /**
   * Get gameTitleStateId
   * @return gameTitleStateId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getGameTitleStateId() {
    return gameTitleStateId;
  }

  public void setGameTitleStateId(Integer gameTitleStateId) {
    this.gameTitleStateId = gameTitleStateId;
  }

  public TournamentCompleteOutputModel allMatchesRunManualMode(Boolean allMatchesRunManualMode) {
    this.allMatchesRunManualMode = allMatchesRunManualMode;
    return this;
  }

   /**
   * Get allMatchesRunManualMode
   * @return allMatchesRunManualMode
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getAllMatchesRunManualMode() {
    return allMatchesRunManualMode;
  }

  public void setAllMatchesRunManualMode(Boolean allMatchesRunManualMode) {
    this.allMatchesRunManualMode = allMatchesRunManualMode;
  }

  public TournamentCompleteOutputModel thirdPartyTournamentId(String thirdPartyTournamentId) {
    this.thirdPartyTournamentId = thirdPartyTournamentId;
    return this;
  }

   /**
   * Get thirdPartyTournamentId
   * @return thirdPartyTournamentId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getThirdPartyTournamentId() {
    return thirdPartyTournamentId;
  }

  public void setThirdPartyTournamentId(String thirdPartyTournamentId) {
    this.thirdPartyTournamentId = thirdPartyTournamentId;
  }

  public TournamentCompleteOutputModel thirdPartyApiRegion(String thirdPartyApiRegion) {
    this.thirdPartyApiRegion = thirdPartyApiRegion;
    return this;
  }

   /**
   * Get thirdPartyApiRegion
   * @return thirdPartyApiRegion
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getThirdPartyApiRegion() {
    return thirdPartyApiRegion;
  }

  public void setThirdPartyApiRegion(String thirdPartyApiRegion) {
    this.thirdPartyApiRegion = thirdPartyApiRegion;
  }

  public TournamentCompleteOutputModel thirdPartyTournamentConfiguration(String thirdPartyTournamentConfiguration) {
    this.thirdPartyTournamentConfiguration = thirdPartyTournamentConfiguration;
    return this;
  }

   /**
   * Get thirdPartyTournamentConfiguration
   * @return thirdPartyTournamentConfiguration
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getThirdPartyTournamentConfiguration() {
    return thirdPartyTournamentConfiguration;
  }

  public void setThirdPartyTournamentConfiguration(String thirdPartyTournamentConfiguration) {
    this.thirdPartyTournamentConfiguration = thirdPartyTournamentConfiguration;
  }

  public TournamentCompleteOutputModel logoListUrl(String logoListUrl) {
    this.logoListUrl = logoListUrl;
    return this;
  }

   /**
   * Get logoListUrl
   * @return logoListUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLogoListUrl() {
    return logoListUrl;
  }

  public void setLogoListUrl(String logoListUrl) {
    this.logoListUrl = logoListUrl;
  }

  public TournamentCompleteOutputModel logoListRelativeUrl(String logoListRelativeUrl) {
    this.logoListRelativeUrl = logoListRelativeUrl;
    return this;
  }

   /**
   * Get logoListRelativeUrl
   * @return logoListRelativeUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLogoListRelativeUrl() {
    return logoListRelativeUrl;
  }

  public void setLogoListRelativeUrl(String logoListRelativeUrl) {
    this.logoListRelativeUrl = logoListRelativeUrl;
  }

  public TournamentCompleteOutputModel logoHomeUrl(String logoHomeUrl) {
    this.logoHomeUrl = logoHomeUrl;
    return this;
  }

   /**
   * Get logoHomeUrl
   * @return logoHomeUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLogoHomeUrl() {
    return logoHomeUrl;
  }

  public void setLogoHomeUrl(String logoHomeUrl) {
    this.logoHomeUrl = logoHomeUrl;
  }

  public TournamentCompleteOutputModel logoHomeRelativeUrl(String logoHomeRelativeUrl) {
    this.logoHomeRelativeUrl = logoHomeRelativeUrl;
    return this;
  }

   /**
   * Get logoHomeRelativeUrl
   * @return logoHomeRelativeUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLogoHomeRelativeUrl() {
    return logoHomeRelativeUrl;
  }

  public void setLogoHomeRelativeUrl(String logoHomeRelativeUrl) {
    this.logoHomeRelativeUrl = logoHomeRelativeUrl;
  }

  public TournamentCompleteOutputModel logoFeaturedUrl(String logoFeaturedUrl) {
    this.logoFeaturedUrl = logoFeaturedUrl;
    return this;
  }

   /**
   * Get logoFeaturedUrl
   * @return logoFeaturedUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLogoFeaturedUrl() {
    return logoFeaturedUrl;
  }

  public void setLogoFeaturedUrl(String logoFeaturedUrl) {
    this.logoFeaturedUrl = logoFeaturedUrl;
  }

  public TournamentCompleteOutputModel logoFeaturedRelativeUrl(String logoFeaturedRelativeUrl) {
    this.logoFeaturedRelativeUrl = logoFeaturedRelativeUrl;
    return this;
  }

   /**
   * Get logoFeaturedRelativeUrl
   * @return logoFeaturedRelativeUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLogoFeaturedRelativeUrl() {
    return logoFeaturedRelativeUrl;
  }

  public void setLogoFeaturedRelativeUrl(String logoFeaturedRelativeUrl) {
    this.logoFeaturedRelativeUrl = logoFeaturedRelativeUrl;
  }

  public TournamentCompleteOutputModel serverConfigurationFileName(String serverConfigurationFileName) {
    this.serverConfigurationFileName = serverConfigurationFileName;
    return this;
  }

   /**
   * Get serverConfigurationFileName
   * @return serverConfigurationFileName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getServerConfigurationFileName() {
    return serverConfigurationFileName;
  }

  public void setServerConfigurationFileName(String serverConfigurationFileName) {
    this.serverConfigurationFileName = serverConfigurationFileName;
  }

  public TournamentCompleteOutputModel allowPreCheckin(Boolean allowPreCheckin) {
    this.allowPreCheckin = allowPreCheckin;
    return this;
  }

   /**
   * Get allowPreCheckin
   * @return allowPreCheckin
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getAllowPreCheckin() {
    return allowPreCheckin;
  }

  public void setAllowPreCheckin(Boolean allowPreCheckin) {
    this.allowPreCheckin = allowPreCheckin;
  }

  public TournamentCompleteOutputModel preCheckinMinutesBeforeStart(Integer preCheckinMinutesBeforeStart) {
    this.preCheckinMinutesBeforeStart = preCheckinMinutesBeforeStart;
    return this;
  }

   /**
   * Get preCheckinMinutesBeforeStart
   * @return preCheckinMinutesBeforeStart
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getPreCheckinMinutesBeforeStart() {
    return preCheckinMinutesBeforeStart;
  }

  public void setPreCheckinMinutesBeforeStart(Integer preCheckinMinutesBeforeStart) {
    this.preCheckinMinutesBeforeStart = preCheckinMinutesBeforeStart;
  }

  public TournamentCompleteOutputModel standByParticipantCount(Integer standByParticipantCount) {
    this.standByParticipantCount = standByParticipantCount;
    return this;
  }

   /**
   * Get standByParticipantCount
   * @return standByParticipantCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getStandByParticipantCount() {
    return standByParticipantCount;
  }

  public void setStandByParticipantCount(Integer standByParticipantCount) {
    this.standByParticipantCount = standByParticipantCount;
  }

  public TournamentCompleteOutputModel isPreCheckinAvailable(Boolean isPreCheckinAvailable) {
    this.isPreCheckinAvailable = isPreCheckinAvailable;
    return this;
  }

   /**
   * Get isPreCheckinAvailable
   * @return isPreCheckinAvailable
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsPreCheckinAvailable() {
    return isPreCheckinAvailable;
  }

  public void setIsPreCheckinAvailable(Boolean isPreCheckinAvailable) {
    this.isPreCheckinAvailable = isPreCheckinAvailable;
  }

  public TournamentCompleteOutputModel qualifier(TournamentQualifierModel qualifier) {
    this.qualifier = qualifier;
    return this;
  }

   /**
   * Get qualifier
   * @return qualifier
  **/
  @ApiModelProperty(example = "null", value = "")
  public TournamentQualifierModel getQualifier() {
    return qualifier;
  }

  public void setQualifier(TournamentQualifierModel qualifier) {
    this.qualifier = qualifier;
  }

  public TournamentCompleteOutputModel tournamentManagementPolicyId(Integer tournamentManagementPolicyId) {
    this.tournamentManagementPolicyId = tournamentManagementPolicyId;
    return this;
  }

   /**
   * Get tournamentManagementPolicyId
   * @return tournamentManagementPolicyId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTournamentManagementPolicyId() {
    return tournamentManagementPolicyId;
  }

  public void setTournamentManagementPolicyId(Integer tournamentManagementPolicyId) {
    this.tournamentManagementPolicyId = tournamentManagementPolicyId;
  }

  public TournamentCompleteOutputModel predefinedStreamedMatches(List<TournamentPredefinedStreamedMatchesModel> predefinedStreamedMatches) {
    this.predefinedStreamedMatches = predefinedStreamedMatches;
    return this;
  }

  public TournamentCompleteOutputModel addPredefinedStreamedMatchesItem(TournamentPredefinedStreamedMatchesModel predefinedStreamedMatchesItem) {
    this.predefinedStreamedMatches.add(predefinedStreamedMatchesItem);
    return this;
  }

   /**
   * Get predefinedStreamedMatches
   * @return predefinedStreamedMatches
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<TournamentPredefinedStreamedMatchesModel> getPredefinedStreamedMatches() {
    return predefinedStreamedMatches;
  }

  public void setPredefinedStreamedMatches(List<TournamentPredefinedStreamedMatchesModel> predefinedStreamedMatches) {
    this.predefinedStreamedMatches = predefinedStreamedMatches;
  }

  public TournamentCompleteOutputModel lanModeEnabled(Boolean lanModeEnabled) {
    this.lanModeEnabled = lanModeEnabled;
    return this;
  }

   /**
   * Get lanModeEnabled
   * @return lanModeEnabled
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getLanModeEnabled() {
    return lanModeEnabled;
  }

  public void setLanModeEnabled(Boolean lanModeEnabled) {
    this.lanModeEnabled = lanModeEnabled;
  }

  public TournamentCompleteOutputModel enableLanTagging(Boolean enableLanTagging) {
    this.enableLanTagging = enableLanTagging;
    return this;
  }

   /**
   * Get enableLanTagging
   * @return enableLanTagging
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getEnableLanTagging() {
    return enableLanTagging;
  }

  public void setEnableLanTagging(Boolean enableLanTagging) {
    this.enableLanTagging = enableLanTagging;
  }

  public TournamentCompleteOutputModel lanTag(String lanTag) {
    this.lanTag = lanTag;
    return this;
  }

   /**
   * Get lanTag
   * @return lanTag
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLanTag() {
    return lanTag;
  }

  public void setLanTag(String lanTag) {
    this.lanTag = lanTag;
  }

  public TournamentCompleteOutputModel allowedCountryIds(List<Integer> allowedCountryIds) {
    this.allowedCountryIds = allowedCountryIds;
    return this;
  }

  public TournamentCompleteOutputModel addAllowedCountryIdsItem(Integer allowedCountryIdsItem) {
    this.allowedCountryIds.add(allowedCountryIdsItem);
    return this;
  }

   /**
   * Get allowedCountryIds
   * @return allowedCountryIds
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Integer> getAllowedCountryIds() {
    return allowedCountryIds;
  }

  public void setAllowedCountryIds(List<Integer> allowedCountryIds) {
    this.allowedCountryIds = allowedCountryIds;
  }

  public TournamentCompleteOutputModel allowedCountryList(List<AddressCountryModel> allowedCountryList) {
    this.allowedCountryList = allowedCountryList;
    return this;
  }

  public TournamentCompleteOutputModel addAllowedCountryListItem(AddressCountryModel allowedCountryListItem) {
    this.allowedCountryList.add(allowedCountryListItem);
    return this;
  }

   /**
   * Get allowedCountryList
   * @return allowedCountryList
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<AddressCountryModel> getAllowedCountryList() {
    return allowedCountryList;
  }

  public void setAllowedCountryList(List<AddressCountryModel> allowedCountryList) {
    this.allowedCountryList = allowedCountryList;
  }

  public TournamentCompleteOutputModel pauseIfQualifierEndsInTie(Boolean pauseIfQualifierEndsInTie) {
    this.pauseIfQualifierEndsInTie = pauseIfQualifierEndsInTie;
    return this;
  }

   /**
   * Get pauseIfQualifierEndsInTie
   * @return pauseIfQualifierEndsInTie
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getPauseIfQualifierEndsInTie() {
    return pauseIfQualifierEndsInTie;
  }

  public void setPauseIfQualifierEndsInTie(Boolean pauseIfQualifierEndsInTie) {
    this.pauseIfQualifierEndsInTie = pauseIfQualifierEndsInTie;
  }

  public TournamentCompleteOutputModel isPausedForTiedQualifierFinish(Boolean isPausedForTiedQualifierFinish) {
    this.isPausedForTiedQualifierFinish = isPausedForTiedQualifierFinish;
    return this;
  }

   /**
   * Get isPausedForTiedQualifierFinish
   * @return isPausedForTiedQualifierFinish
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsPausedForTiedQualifierFinish() {
    return isPausedForTiedQualifierFinish;
  }

  public void setIsPausedForTiedQualifierFinish(Boolean isPausedForTiedQualifierFinish) {
    this.isPausedForTiedQualifierFinish = isPausedForTiedQualifierFinish;
  }

  public TournamentCompleteOutputModel isPausedForTiedQualifierFinishDateTime(DateTime isPausedForTiedQualifierFinishDateTime) {
    this.isPausedForTiedQualifierFinishDateTime = isPausedForTiedQualifierFinishDateTime;
    return this;
  }

   /**
   * Get isPausedForTiedQualifierFinishDateTime
   * @return isPausedForTiedQualifierFinishDateTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getIsPausedForTiedQualifierFinishDateTime() {
    return isPausedForTiedQualifierFinishDateTime;
  }

  public void setIsPausedForTiedQualifierFinishDateTime(DateTime isPausedForTiedQualifierFinishDateTime) {
    this.isPausedForTiedQualifierFinishDateTime = isPausedForTiedQualifierFinishDateTime;
  }

  public TournamentCompleteOutputModel qualifierTiedFinishIsResolved(Boolean qualifierTiedFinishIsResolved) {
    this.qualifierTiedFinishIsResolved = qualifierTiedFinishIsResolved;
    return this;
  }

   /**
   * Get qualifierTiedFinishIsResolved
   * @return qualifierTiedFinishIsResolved
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getQualifierTiedFinishIsResolved() {
    return qualifierTiedFinishIsResolved;
  }

  public void setQualifierTiedFinishIsResolved(Boolean qualifierTiedFinishIsResolved) {
    this.qualifierTiedFinishIsResolved = qualifierTiedFinishIsResolved;
  }

  public TournamentCompleteOutputModel qualifierTiedFinishIsResolvedDateTime(DateTime qualifierTiedFinishIsResolvedDateTime) {
    this.qualifierTiedFinishIsResolvedDateTime = qualifierTiedFinishIsResolvedDateTime;
    return this;
  }

   /**
   * Get qualifierTiedFinishIsResolvedDateTime
   * @return qualifierTiedFinishIsResolvedDateTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getQualifierTiedFinishIsResolvedDateTime() {
    return qualifierTiedFinishIsResolvedDateTime;
  }

  public void setQualifierTiedFinishIsResolvedDateTime(DateTime qualifierTiedFinishIsResolvedDateTime) {
    this.qualifierTiedFinishIsResolvedDateTime = qualifierTiedFinishIsResolvedDateTime;
  }

  public TournamentCompleteOutputModel qualifierTiedFinishIsResolvedByAdministratorId(Long qualifierTiedFinishIsResolvedByAdministratorId) {
    this.qualifierTiedFinishIsResolvedByAdministratorId = qualifierTiedFinishIsResolvedByAdministratorId;
    return this;
  }

   /**
   * Get qualifierTiedFinishIsResolvedByAdministratorId
   * @return qualifierTiedFinishIsResolvedByAdministratorId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getQualifierTiedFinishIsResolvedByAdministratorId() {
    return qualifierTiedFinishIsResolvedByAdministratorId;
  }

  public void setQualifierTiedFinishIsResolvedByAdministratorId(Long qualifierTiedFinishIsResolvedByAdministratorId) {
    this.qualifierTiedFinishIsResolvedByAdministratorId = qualifierTiedFinishIsResolvedByAdministratorId;
  }

  public TournamentCompleteOutputModel qualifierTiedFinishIsResolvedByAdministratorProfile(EntityProfileModel qualifierTiedFinishIsResolvedByAdministratorProfile) {
    this.qualifierTiedFinishIsResolvedByAdministratorProfile = qualifierTiedFinishIsResolvedByAdministratorProfile;
    return this;
  }

   /**
   * Get qualifierTiedFinishIsResolvedByAdministratorProfile
   * @return qualifierTiedFinishIsResolvedByAdministratorProfile
  **/
  @ApiModelProperty(example = "null", value = "")
  public EntityProfileModel getQualifierTiedFinishIsResolvedByAdministratorProfile() {
    return qualifierTiedFinishIsResolvedByAdministratorProfile;
  }

  public void setQualifierTiedFinishIsResolvedByAdministratorProfile(EntityProfileModel qualifierTiedFinishIsResolvedByAdministratorProfile) {
    this.qualifierTiedFinishIsResolvedByAdministratorProfile = qualifierTiedFinishIsResolvedByAdministratorProfile;
  }

  public TournamentCompleteOutputModel tournamentIsComplete(Boolean tournamentIsComplete) {
    this.tournamentIsComplete = tournamentIsComplete;
    return this;
  }

   /**
   * Get tournamentIsComplete
   * @return tournamentIsComplete
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getTournamentIsComplete() {
    return tournamentIsComplete;
  }

  public void setTournamentIsComplete(Boolean tournamentIsComplete) {
    this.tournamentIsComplete = tournamentIsComplete;
  }

  public TournamentCompleteOutputModel tournamentIsLive(Boolean tournamentIsLive) {
    this.tournamentIsLive = tournamentIsLive;
    return this;
  }

   /**
   * Get tournamentIsLive
   * @return tournamentIsLive
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getTournamentIsLive() {
    return tournamentIsLive;
  }

  public void setTournamentIsLive(Boolean tournamentIsLive) {
    this.tournamentIsLive = tournamentIsLive;
  }

  public TournamentCompleteOutputModel tournamentLiveDateTime(DateTime tournamentLiveDateTime) {
    this.tournamentLiveDateTime = tournamentLiveDateTime;
    return this;
  }

   /**
   * Get tournamentLiveDateTime
   * @return tournamentLiveDateTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getTournamentLiveDateTime() {
    return tournamentLiveDateTime;
  }

  public void setTournamentLiveDateTime(DateTime tournamentLiveDateTime) {
    this.tournamentLiveDateTime = tournamentLiveDateTime;
  }

  public TournamentCompleteOutputModel tournamentId(Long tournamentId) {
    this.tournamentId = tournamentId;
    return this;
  }

   /**
   * Get tournamentId
   * @return tournamentId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getTournamentId() {
    return tournamentId;
  }

  public void setTournamentId(Long tournamentId) {
    this.tournamentId = tournamentId;
  }

  public TournamentCompleteOutputModel tournamentTitle(String tournamentTitle) {
    this.tournamentTitle = tournamentTitle;
    return this;
  }

   /**
   * Get tournamentTitle
   * @return tournamentTitle
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTournamentTitle() {
    return tournamentTitle;
  }

  public void setTournamentTitle(String tournamentTitle) {
    this.tournamentTitle = tournamentTitle;
  }

  public TournamentCompleteOutputModel tournamentSubTitle(String tournamentSubTitle) {
    this.tournamentSubTitle = tournamentSubTitle;
    return this;
  }

   /**
   * Get tournamentSubTitle
   * @return tournamentSubTitle
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTournamentSubTitle() {
    return tournamentSubTitle;
  }

  public void setTournamentSubTitle(String tournamentSubTitle) {
    this.tournamentSubTitle = tournamentSubTitle;
  }

  public TournamentCompleteOutputModel highlightColor(String highlightColor) {
    this.highlightColor = highlightColor;
    return this;
  }

   /**
   * Get highlightColor
   * @return highlightColor
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getHighlightColor() {
    return highlightColor;
  }

  public void setHighlightColor(String highlightColor) {
    this.highlightColor = highlightColor;
  }

  public TournamentCompleteOutputModel tournamentDescription(String tournamentDescription) {
    this.tournamentDescription = tournamentDescription;
    return this;
  }

   /**
   * Get tournamentDescription
   * @return tournamentDescription
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTournamentDescription() {
    return tournamentDescription;
  }

  public void setTournamentDescription(String tournamentDescription) {
    this.tournamentDescription = tournamentDescription;
  }

  public TournamentCompleteOutputModel matchConnectionInstructions(String matchConnectionInstructions) {
    this.matchConnectionInstructions = matchConnectionInstructions;
    return this;
  }

   /**
   * Get matchConnectionInstructions
   * @return matchConnectionInstructions
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMatchConnectionInstructions() {
    return matchConnectionInstructions;
  }

  public void setMatchConnectionInstructions(String matchConnectionInstructions) {
    this.matchConnectionInstructions = matchConnectionInstructions;
  }

  public TournamentCompleteOutputModel gameTitleId(Integer gameTitleId) {
    this.gameTitleId = gameTitleId;
    return this;
  }

   /**
   * Get gameTitleId
   * @return gameTitleId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getGameTitleId() {
    return gameTitleId;
  }

  public void setGameTitleId(Integer gameTitleId) {
    this.gameTitleId = gameTitleId;
  }

  public TournamentCompleteOutputModel isTeamTournament(Boolean isTeamTournament) {
    this.isTeamTournament = isTeamTournament;
    return this;
  }

   /**
   * Get isTeamTournament
   * @return isTeamTournament
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsTeamTournament() {
    return isTeamTournament;
  }

  public void setIsTeamTournament(Boolean isTeamTournament) {
    this.isTeamTournament = isTeamTournament;
  }

  public TournamentCompleteOutputModel minimumNumberOfEntities(Integer minimumNumberOfEntities) {
    this.minimumNumberOfEntities = minimumNumberOfEntities;
    return this;
  }

   /**
   * Get minimumNumberOfEntities
   * @return minimumNumberOfEntities
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMinimumNumberOfEntities() {
    return minimumNumberOfEntities;
  }

  public void setMinimumNumberOfEntities(Integer minimumNumberOfEntities) {
    this.minimumNumberOfEntities = minimumNumberOfEntities;
  }

  public TournamentCompleteOutputModel maximumNumberOfEntities(Integer maximumNumberOfEntities) {
    this.maximumNumberOfEntities = maximumNumberOfEntities;
    return this;
  }

   /**
   * Get maximumNumberOfEntities
   * @return maximumNumberOfEntities
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMaximumNumberOfEntities() {
    return maximumNumberOfEntities;
  }

  public void setMaximumNumberOfEntities(Integer maximumNumberOfEntities) {
    this.maximumNumberOfEntities = maximumNumberOfEntities;
  }

  public TournamentCompleteOutputModel teamSize(Integer teamSize) {
    this.teamSize = teamSize;
    return this;
  }

   /**
   * Get teamSize
   * @return teamSize
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTeamSize() {
    return teamSize;
  }

  public void setTeamSize(Integer teamSize) {
    this.teamSize = teamSize;
  }

  public TournamentCompleteOutputModel tournamentTypeId(Integer tournamentTypeId) {
    this.tournamentTypeId = tournamentTypeId;
    return this;
  }

   /**
   * Get tournamentTypeId
   * @return tournamentTypeId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTournamentTypeId() {
    return tournamentTypeId;
  }

  public void setTournamentTypeId(Integer tournamentTypeId) {
    this.tournamentTypeId = tournamentTypeId;
  }

  public TournamentCompleteOutputModel originalTournamentTypeId(Integer originalTournamentTypeId) {
    this.originalTournamentTypeId = originalTournamentTypeId;
    return this;
  }

   /**
   * Get originalTournamentTypeId
   * @return originalTournamentTypeId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getOriginalTournamentTypeId() {
    return originalTournamentTypeId;
  }

  public void setOriginalTournamentTypeId(Integer originalTournamentTypeId) {
    this.originalTournamentTypeId = originalTournamentTypeId;
  }

  public TournamentCompleteOutputModel tournamentTypeName(String tournamentTypeName) {
    this.tournamentTypeName = tournamentTypeName;
    return this;
  }

   /**
   * Get tournamentTypeName
   * @return tournamentTypeName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTournamentTypeName() {
    return tournamentTypeName;
  }

  public void setTournamentTypeName(String tournamentTypeName) {
    this.tournamentTypeName = tournamentTypeName;
  }

  public TournamentCompleteOutputModel tournamentFeeAmount(Double tournamentFeeAmount) {
    this.tournamentFeeAmount = tournamentFeeAmount;
    return this;
  }

   /**
   * Get tournamentFeeAmount
   * @return tournamentFeeAmount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getTournamentFeeAmount() {
    return tournamentFeeAmount;
  }

  public void setTournamentFeeAmount(Double tournamentFeeAmount) {
    this.tournamentFeeAmount = tournamentFeeAmount;
  }

  public TournamentCompleteOutputModel tournamentStartDateTime(DateTime tournamentStartDateTime) {
    this.tournamentStartDateTime = tournamentStartDateTime;
    return this;
  }

   /**
   * Get tournamentStartDateTime
   * @return tournamentStartDateTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getTournamentStartDateTime() {
    return tournamentStartDateTime;
  }

  public void setTournamentStartDateTime(DateTime tournamentStartDateTime) {
    this.tournamentStartDateTime = tournamentStartDateTime;
  }

  public TournamentCompleteOutputModel tournamentEndDateTime(DateTime tournamentEndDateTime) {
    this.tournamentEndDateTime = tournamentEndDateTime;
    return this;
  }

   /**
   * Get tournamentEndDateTime
   * @return tournamentEndDateTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getTournamentEndDateTime() {
    return tournamentEndDateTime;
  }

  public void setTournamentEndDateTime(DateTime tournamentEndDateTime) {
    this.tournamentEndDateTime = tournamentEndDateTime;
  }

  public TournamentCompleteOutputModel registrationCutoffDateTime(DateTime registrationCutoffDateTime) {
    this.registrationCutoffDateTime = registrationCutoffDateTime;
    return this;
  }

   /**
   * Get registrationCutoffDateTime
   * @return registrationCutoffDateTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getRegistrationCutoffDateTime() {
    return registrationCutoffDateTime;
  }

  public void setRegistrationCutoffDateTime(DateTime registrationCutoffDateTime) {
    this.registrationCutoffDateTime = registrationCutoffDateTime;
  }

  public TournamentCompleteOutputModel isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Get isPublic
   * @return isPublic
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsPublic() {
    return isPublic;
  }

  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }

  public TournamentCompleteOutputModel isFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
    return this;
  }

   /**
   * Get isFavorite
   * @return isFavorite
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsFavorite() {
    return isFavorite;
  }

  public void setIsFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
  }

  public TournamentCompleteOutputModel enableMatchLobby(Boolean enableMatchLobby) {
    this.enableMatchLobby = enableMatchLobby;
    return this;
  }

   /**
   * Get enableMatchLobby
   * @return enableMatchLobby
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getEnableMatchLobby() {
    return enableMatchLobby;
  }

  public void setEnableMatchLobby(Boolean enableMatchLobby) {
    this.enableMatchLobby = enableMatchLobby;
  }

  public TournamentCompleteOutputModel logoIsBorderless(Boolean logoIsBorderless) {
    this.logoIsBorderless = logoIsBorderless;
    return this;
  }

   /**
   * Get logoIsBorderless
   * @return logoIsBorderless
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getLogoIsBorderless() {
    return logoIsBorderless;
  }

  public void setLogoIsBorderless(Boolean logoIsBorderless) {
    this.logoIsBorderless = logoIsBorderless;
  }

  public TournamentCompleteOutputModel logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

   /**
   * Get logoUrl
   * @return logoUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }

  public TournamentCompleteOutputModel backgroundUrl(String backgroundUrl) {
    this.backgroundUrl = backgroundUrl;
    return this;
  }

   /**
   * Get backgroundUrl
   * @return backgroundUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBackgroundUrl() {
    return backgroundUrl;
  }

  public void setBackgroundUrl(String backgroundUrl) {
    this.backgroundUrl = backgroundUrl;
  }

  public TournamentCompleteOutputModel logoRelativeUrl(String logoRelativeUrl) {
    this.logoRelativeUrl = logoRelativeUrl;
    return this;
  }

   /**
   * Get logoRelativeUrl
   * @return logoRelativeUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLogoRelativeUrl() {
    return logoRelativeUrl;
  }

  public void setLogoRelativeUrl(String logoRelativeUrl) {
    this.logoRelativeUrl = logoRelativeUrl;
  }

  public TournamentCompleteOutputModel backgroundRelativeUrl(String backgroundRelativeUrl) {
    this.backgroundRelativeUrl = backgroundRelativeUrl;
    return this;
  }

   /**
   * Get backgroundRelativeUrl
   * @return backgroundRelativeUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBackgroundRelativeUrl() {
    return backgroundRelativeUrl;
  }

  public void setBackgroundRelativeUrl(String backgroundRelativeUrl) {
    this.backgroundRelativeUrl = backgroundRelativeUrl;
  }

  public TournamentCompleteOutputModel backgroundHomeUrl(String backgroundHomeUrl) {
    this.backgroundHomeUrl = backgroundHomeUrl;
    return this;
  }

   /**
   * Get backgroundHomeUrl
   * @return backgroundHomeUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBackgroundHomeUrl() {
    return backgroundHomeUrl;
  }

  public void setBackgroundHomeUrl(String backgroundHomeUrl) {
    this.backgroundHomeUrl = backgroundHomeUrl;
  }

  public TournamentCompleteOutputModel backgroundHomeRelativeUrl(String backgroundHomeRelativeUrl) {
    this.backgroundHomeRelativeUrl = backgroundHomeRelativeUrl;
    return this;
  }

   /**
   * Get backgroundHomeRelativeUrl
   * @return backgroundHomeRelativeUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBackgroundHomeRelativeUrl() {
    return backgroundHomeRelativeUrl;
  }

  public void setBackgroundHomeRelativeUrl(String backgroundHomeRelativeUrl) {
    this.backgroundHomeRelativeUrl = backgroundHomeRelativeUrl;
  }

  public TournamentCompleteOutputModel backgroundSearchUrl(String backgroundSearchUrl) {
    this.backgroundSearchUrl = backgroundSearchUrl;
    return this;
  }

   /**
   * Get backgroundSearchUrl
   * @return backgroundSearchUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBackgroundSearchUrl() {
    return backgroundSearchUrl;
  }

  public void setBackgroundSearchUrl(String backgroundSearchUrl) {
    this.backgroundSearchUrl = backgroundSearchUrl;
  }

  public TournamentCompleteOutputModel backgroundSearchRelativeUrl(String backgroundSearchRelativeUrl) {
    this.backgroundSearchRelativeUrl = backgroundSearchRelativeUrl;
    return this;
  }

   /**
   * Get backgroundSearchRelativeUrl
   * @return backgroundSearchRelativeUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBackgroundSearchRelativeUrl() {
    return backgroundSearchRelativeUrl;
  }

  public void setBackgroundSearchRelativeUrl(String backgroundSearchRelativeUrl) {
    this.backgroundSearchRelativeUrl = backgroundSearchRelativeUrl;
  }

  public TournamentCompleteOutputModel joinPasswordRequired(Boolean joinPasswordRequired) {
    this.joinPasswordRequired = joinPasswordRequired;
    return this;
  }

   /**
   * Get joinPasswordRequired
   * @return joinPasswordRequired
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getJoinPasswordRequired() {
    return joinPasswordRequired;
  }

  public void setJoinPasswordRequired(Boolean joinPasswordRequired) {
    this.joinPasswordRequired = joinPasswordRequired;
  }

  public TournamentCompleteOutputModel hasConsolationRound(Boolean hasConsolationRound) {
    this.hasConsolationRound = hasConsolationRound;
    return this;
  }

   /**
   * Get hasConsolationRound
   * @return hasConsolationRound
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getHasConsolationRound() {
    return hasConsolationRound;
  }

  public void setHasConsolationRound(Boolean hasConsolationRound) {
    this.hasConsolationRound = hasConsolationRound;
  }

  public TournamentCompleteOutputModel currentNumberOfParticipants(Integer currentNumberOfParticipants) {
    this.currentNumberOfParticipants = currentNumberOfParticipants;
    return this;
  }

   /**
   * Get currentNumberOfParticipants
   * @return currentNumberOfParticipants
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getCurrentNumberOfParticipants() {
    return currentNumberOfParticipants;
  }

  public void setCurrentNumberOfParticipants(Integer currentNumberOfParticipants) {
    this.currentNumberOfParticipants = currentNumberOfParticipants;
  }

  public TournamentCompleteOutputModel game(GameTitleOutputModel game) {
    this.game = game;
    return this;
  }

   /**
   * Get game
   * @return game
  **/
  @ApiModelProperty(example = "null", value = "")
  public GameTitleOutputModel getGame() {
    return game;
  }

  public void setGame(GameTitleOutputModel game) {
    this.game = game;
  }

  public TournamentCompleteOutputModel lastUpdatedDateTime(DateTime lastUpdatedDateTime) {
    this.lastUpdatedDateTime = lastUpdatedDateTime;
    return this;
  }

   /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }

  public void setLastUpdatedDateTime(DateTime lastUpdatedDateTime) {
    this.lastUpdatedDateTime = lastUpdatedDateTime;
  }

  public TournamentCompleteOutputModel websiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

   /**
   * Get websiteUrl
   * @return websiteUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }

  public TournamentCompleteOutputModel facebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
    return this;
  }

   /**
   * Get facebookUrl
   * @return facebookUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getFacebookUrl() {
    return facebookUrl;
  }

  public void setFacebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
  }

  public TournamentCompleteOutputModel twitchUrl(String twitchUrl) {
    this.twitchUrl = twitchUrl;
    return this;
  }

   /**
   * Get twitchUrl
   * @return twitchUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTwitchUrl() {
    return twitchUrl;
  }

  public void setTwitchUrl(String twitchUrl) {
    this.twitchUrl = twitchUrl;
  }

  public TournamentCompleteOutputModel instagramUrl(String instagramUrl) {
    this.instagramUrl = instagramUrl;
    return this;
  }

   /**
   * Get instagramUrl
   * @return instagramUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getInstagramUrl() {
    return instagramUrl;
  }

  public void setInstagramUrl(String instagramUrl) {
    this.instagramUrl = instagramUrl;
  }

  public TournamentCompleteOutputModel twitterUrl(String twitterUrl) {
    this.twitterUrl = twitterUrl;
    return this;
  }

   /**
   * Get twitterUrl
   * @return twitterUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTwitterUrl() {
    return twitterUrl;
  }

  public void setTwitterUrl(String twitterUrl) {
    this.twitterUrl = twitterUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TournamentCompleteOutputModel tournamentCompleteOutputModel = (TournamentCompleteOutputModel) o;
    return Objects.equals(this.generationTicks, tournamentCompleteOutputModel.generationTicks) &&
        Objects.equals(this.rulesTitle, tournamentCompleteOutputModel.rulesTitle) &&
        Objects.equals(this.rulesDescription, tournamentCompleteOutputModel.rulesDescription) &&
        Objects.equals(this.administrators, tournamentCompleteOutputModel.administrators) &&
        Objects.equals(this.entityOwnerProfile, tournamentCompleteOutputModel.entityOwnerProfile) &&
        Objects.equals(this.participants, tournamentCompleteOutputModel.participants) &&
        Objects.equals(this.matches, tournamentCompleteOutputModel.matches) &&
        Objects.equals(this.payouts, tournamentCompleteOutputModel.payouts) &&
        Objects.equals(this.roundRules, tournamentCompleteOutputModel.roundRules) &&
        Objects.equals(this.tournamentManagementPolicy, tournamentCompleteOutputModel.tournamentManagementPolicy) &&
        Objects.equals(this.tournamentStateId, tournamentCompleteOutputModel.tournamentStateId) &&
        Objects.equals(this.isPublished, tournamentCompleteOutputModel.isPublished) &&
        Objects.equals(this.gameName, tournamentCompleteOutputModel.gameName) &&
        Objects.equals(this.entityOwnerId, tournamentCompleteOutputModel.entityOwnerId) &&
        Objects.equals(this.developerPartnerId, tournamentCompleteOutputModel.developerPartnerId) &&
        Objects.equals(this.gameTitleRulesId, tournamentCompleteOutputModel.gameTitleRulesId) &&
        Objects.equals(this.isApproved, tournamentCompleteOutputModel.isApproved) &&
        Objects.equals(this.isRealCurrency, tournamentCompleteOutputModel.isRealCurrency) &&
        Objects.equals(this.entityApprovedById, tournamentCompleteOutputModel.entityApprovedById) &&
        Objects.equals(this.resultIsFinalized, tournamentCompleteOutputModel.resultIsFinalized) &&
        Objects.equals(this.entityResultFinalizedById, tournamentCompleteOutputModel.entityResultFinalizedById) &&
        Objects.equals(this.tournamentPassword, tournamentCompleteOutputModel.tournamentPassword) &&
        Objects.equals(this.tournamentJoinTypeId, tournamentCompleteOutputModel.tournamentJoinTypeId) &&
        Objects.equals(this.tournamentJoinTypeName, tournamentCompleteOutputModel.tournamentJoinTypeName) &&
        Objects.equals(this.prizePoolAmount, tournamentCompleteOutputModel.prizePoolAmount) &&
        Objects.equals(this.tournamentPrizeFundingTypeId, tournamentCompleteOutputModel.tournamentPrizeFundingTypeId) &&
        Objects.equals(this.tournamentPrizeFundingTypeName, tournamentCompleteOutputModel.tournamentPrizeFundingTypeName) &&
        Objects.equals(this.percentOfEntryFeeToPrizePool, tournamentCompleteOutputModel.percentOfEntryFeeToPrizePool) &&
        Objects.equals(this.doesCycle, tournamentCompleteOutputModel.doesCycle) &&
        Objects.equals(this.cycleLengthInMinutes, tournamentCompleteOutputModel.cycleLengthInMinutes) &&
        Objects.equals(this.cycleMinutesBeforeStart, tournamentCompleteOutputModel.cycleMinutesBeforeStart) &&
        Objects.equals(this.maxCycleCount, tournamentCompleteOutputModel.maxCycleCount) &&
        Objects.equals(this.cycleCount, tournamentCompleteOutputModel.cycleCount) &&
        Objects.equals(this.hasCycled, tournamentCompleteOutputModel.hasCycled) &&
        Objects.equals(this.cycledTournamentId, tournamentCompleteOutputModel.cycledTournamentId) &&
        Objects.equals(this.canOnlyRegisterFromRegionId, tournamentCompleteOutputModel.canOnlyRegisterFromRegionId) &&
        Objects.equals(this.canOnlyRegisterFromRegionName, tournamentCompleteOutputModel.canOnlyRegisterFromRegionName) &&
        Objects.equals(this.gamingServerRegionName, tournamentCompleteOutputModel.gamingServerRegionName) &&
        Objects.equals(this.roundRobinIsComplete, tournamentCompleteOutputModel.roundRobinIsComplete) &&
        Objects.equals(this.tournamentSeedingTypeId, tournamentCompleteOutputModel.tournamentSeedingTypeId) &&
        Objects.equals(this.tournamentPairingTypeId, tournamentCompleteOutputModel.tournamentPairingTypeId) &&
        Objects.equals(this.payoutCount, tournamentCompleteOutputModel.payoutCount) &&
        Objects.equals(this.automaticGoLiveOnSchedule, tournamentCompleteOutputModel.automaticGoLiveOnSchedule) &&
        Objects.equals(this.minutesAfterStartToForfeit, tournamentCompleteOutputModel.minutesAfterStartToForfeit) &&
        Objects.equals(this.minutesBeforeStartToAllowCheckin, tournamentCompleteOutputModel.minutesBeforeStartToAllowCheckin) &&
        Objects.equals(this.sponsors, tournamentCompleteOutputModel.sponsors) &&
        Objects.equals(this.announcements, tournamentCompleteOutputModel.announcements) &&
        Objects.equals(this.createdDateTime, tournamentCompleteOutputModel.createdDateTime) &&
        Objects.equals(this.developerId, tournamentCompleteOutputModel.developerId) &&
        Objects.equals(this.gameTitleStateId, tournamentCompleteOutputModel.gameTitleStateId) &&
        Objects.equals(this.allMatchesRunManualMode, tournamentCompleteOutputModel.allMatchesRunManualMode) &&
        Objects.equals(this.thirdPartyTournamentId, tournamentCompleteOutputModel.thirdPartyTournamentId) &&
        Objects.equals(this.thirdPartyApiRegion, tournamentCompleteOutputModel.thirdPartyApiRegion) &&
        Objects.equals(this.thirdPartyTournamentConfiguration, tournamentCompleteOutputModel.thirdPartyTournamentConfiguration) &&
        Objects.equals(this.logoListUrl, tournamentCompleteOutputModel.logoListUrl) &&
        Objects.equals(this.logoListRelativeUrl, tournamentCompleteOutputModel.logoListRelativeUrl) &&
        Objects.equals(this.logoHomeUrl, tournamentCompleteOutputModel.logoHomeUrl) &&
        Objects.equals(this.logoHomeRelativeUrl, tournamentCompleteOutputModel.logoHomeRelativeUrl) &&
        Objects.equals(this.logoFeaturedUrl, tournamentCompleteOutputModel.logoFeaturedUrl) &&
        Objects.equals(this.logoFeaturedRelativeUrl, tournamentCompleteOutputModel.logoFeaturedRelativeUrl) &&
        Objects.equals(this.serverConfigurationFileName, tournamentCompleteOutputModel.serverConfigurationFileName) &&
        Objects.equals(this.allowPreCheckin, tournamentCompleteOutputModel.allowPreCheckin) &&
        Objects.equals(this.preCheckinMinutesBeforeStart, tournamentCompleteOutputModel.preCheckinMinutesBeforeStart) &&
        Objects.equals(this.standByParticipantCount, tournamentCompleteOutputModel.standByParticipantCount) &&
        Objects.equals(this.isPreCheckinAvailable, tournamentCompleteOutputModel.isPreCheckinAvailable) &&
        Objects.equals(this.qualifier, tournamentCompleteOutputModel.qualifier) &&
        Objects.equals(this.tournamentManagementPolicyId, tournamentCompleteOutputModel.tournamentManagementPolicyId) &&
        Objects.equals(this.predefinedStreamedMatches, tournamentCompleteOutputModel.predefinedStreamedMatches) &&
        Objects.equals(this.lanModeEnabled, tournamentCompleteOutputModel.lanModeEnabled) &&
        Objects.equals(this.enableLanTagging, tournamentCompleteOutputModel.enableLanTagging) &&
        Objects.equals(this.lanTag, tournamentCompleteOutputModel.lanTag) &&
        Objects.equals(this.allowedCountryIds, tournamentCompleteOutputModel.allowedCountryIds) &&
        Objects.equals(this.allowedCountryList, tournamentCompleteOutputModel.allowedCountryList) &&
        Objects.equals(this.pauseIfQualifierEndsInTie, tournamentCompleteOutputModel.pauseIfQualifierEndsInTie) &&
        Objects.equals(this.isPausedForTiedQualifierFinish, tournamentCompleteOutputModel.isPausedForTiedQualifierFinish) &&
        Objects.equals(this.isPausedForTiedQualifierFinishDateTime, tournamentCompleteOutputModel.isPausedForTiedQualifierFinishDateTime) &&
        Objects.equals(this.qualifierTiedFinishIsResolved, tournamentCompleteOutputModel.qualifierTiedFinishIsResolved) &&
        Objects.equals(this.qualifierTiedFinishIsResolvedDateTime, tournamentCompleteOutputModel.qualifierTiedFinishIsResolvedDateTime) &&
        Objects.equals(this.qualifierTiedFinishIsResolvedByAdministratorId, tournamentCompleteOutputModel.qualifierTiedFinishIsResolvedByAdministratorId) &&
        Objects.equals(this.qualifierTiedFinishIsResolvedByAdministratorProfile, tournamentCompleteOutputModel.qualifierTiedFinishIsResolvedByAdministratorProfile) &&
        Objects.equals(this.tournamentIsComplete, tournamentCompleteOutputModel.tournamentIsComplete) &&
        Objects.equals(this.tournamentIsLive, tournamentCompleteOutputModel.tournamentIsLive) &&
        Objects.equals(this.tournamentLiveDateTime, tournamentCompleteOutputModel.tournamentLiveDateTime) &&
        Objects.equals(this.tournamentId, tournamentCompleteOutputModel.tournamentId) &&
        Objects.equals(this.tournamentTitle, tournamentCompleteOutputModel.tournamentTitle) &&
        Objects.equals(this.tournamentSubTitle, tournamentCompleteOutputModel.tournamentSubTitle) &&
        Objects.equals(this.highlightColor, tournamentCompleteOutputModel.highlightColor) &&
        Objects.equals(this.tournamentDescription, tournamentCompleteOutputModel.tournamentDescription) &&
        Objects.equals(this.matchConnectionInstructions, tournamentCompleteOutputModel.matchConnectionInstructions) &&
        Objects.equals(this.gameTitleId, tournamentCompleteOutputModel.gameTitleId) &&
        Objects.equals(this.isTeamTournament, tournamentCompleteOutputModel.isTeamTournament) &&
        Objects.equals(this.minimumNumberOfEntities, tournamentCompleteOutputModel.minimumNumberOfEntities) &&
        Objects.equals(this.maximumNumberOfEntities, tournamentCompleteOutputModel.maximumNumberOfEntities) &&
        Objects.equals(this.teamSize, tournamentCompleteOutputModel.teamSize) &&
        Objects.equals(this.tournamentTypeId, tournamentCompleteOutputModel.tournamentTypeId) &&
        Objects.equals(this.originalTournamentTypeId, tournamentCompleteOutputModel.originalTournamentTypeId) &&
        Objects.equals(this.tournamentTypeName, tournamentCompleteOutputModel.tournamentTypeName) &&
        Objects.equals(this.tournamentFeeAmount, tournamentCompleteOutputModel.tournamentFeeAmount) &&
        Objects.equals(this.tournamentStartDateTime, tournamentCompleteOutputModel.tournamentStartDateTime) &&
        Objects.equals(this.tournamentEndDateTime, tournamentCompleteOutputModel.tournamentEndDateTime) &&
        Objects.equals(this.registrationCutoffDateTime, tournamentCompleteOutputModel.registrationCutoffDateTime) &&
        Objects.equals(this.isPublic, tournamentCompleteOutputModel.isPublic) &&
        Objects.equals(this.isFavorite, tournamentCompleteOutputModel.isFavorite) &&
        Objects.equals(this.enableMatchLobby, tournamentCompleteOutputModel.enableMatchLobby) &&
        Objects.equals(this.logoIsBorderless, tournamentCompleteOutputModel.logoIsBorderless) &&
        Objects.equals(this.logoUrl, tournamentCompleteOutputModel.logoUrl) &&
        Objects.equals(this.backgroundUrl, tournamentCompleteOutputModel.backgroundUrl) &&
        Objects.equals(this.logoRelativeUrl, tournamentCompleteOutputModel.logoRelativeUrl) &&
        Objects.equals(this.backgroundRelativeUrl, tournamentCompleteOutputModel.backgroundRelativeUrl) &&
        Objects.equals(this.backgroundHomeUrl, tournamentCompleteOutputModel.backgroundHomeUrl) &&
        Objects.equals(this.backgroundHomeRelativeUrl, tournamentCompleteOutputModel.backgroundHomeRelativeUrl) &&
        Objects.equals(this.backgroundSearchUrl, tournamentCompleteOutputModel.backgroundSearchUrl) &&
        Objects.equals(this.backgroundSearchRelativeUrl, tournamentCompleteOutputModel.backgroundSearchRelativeUrl) &&
        Objects.equals(this.joinPasswordRequired, tournamentCompleteOutputModel.joinPasswordRequired) &&
        Objects.equals(this.hasConsolationRound, tournamentCompleteOutputModel.hasConsolationRound) &&
        Objects.equals(this.currentNumberOfParticipants, tournamentCompleteOutputModel.currentNumberOfParticipants) &&
        Objects.equals(this.game, tournamentCompleteOutputModel.game) &&
        Objects.equals(this.lastUpdatedDateTime, tournamentCompleteOutputModel.lastUpdatedDateTime) &&
        Objects.equals(this.websiteUrl, tournamentCompleteOutputModel.websiteUrl) &&
        Objects.equals(this.facebookUrl, tournamentCompleteOutputModel.facebookUrl) &&
        Objects.equals(this.twitchUrl, tournamentCompleteOutputModel.twitchUrl) &&
        Objects.equals(this.instagramUrl, tournamentCompleteOutputModel.instagramUrl) &&
        Objects.equals(this.twitterUrl, tournamentCompleteOutputModel.twitterUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(generationTicks, rulesTitle, rulesDescription, administrators, entityOwnerProfile, participants, matches, payouts, roundRules, tournamentManagementPolicy, tournamentStateId, isPublished, gameName, entityOwnerId, developerPartnerId, gameTitleRulesId, isApproved, isRealCurrency, entityApprovedById, resultIsFinalized, entityResultFinalizedById, tournamentPassword, tournamentJoinTypeId, tournamentJoinTypeName, prizePoolAmount, tournamentPrizeFundingTypeId, tournamentPrizeFundingTypeName, percentOfEntryFeeToPrizePool, doesCycle, cycleLengthInMinutes, cycleMinutesBeforeStart, maxCycleCount, cycleCount, hasCycled, cycledTournamentId, canOnlyRegisterFromRegionId, canOnlyRegisterFromRegionName, gamingServerRegionName, roundRobinIsComplete, tournamentSeedingTypeId, tournamentPairingTypeId, payoutCount, automaticGoLiveOnSchedule, minutesAfterStartToForfeit, minutesBeforeStartToAllowCheckin, sponsors, announcements, createdDateTime, developerId, gameTitleStateId, allMatchesRunManualMode, thirdPartyTournamentId, thirdPartyApiRegion, thirdPartyTournamentConfiguration, logoListUrl, logoListRelativeUrl, logoHomeUrl, logoHomeRelativeUrl, logoFeaturedUrl, logoFeaturedRelativeUrl, serverConfigurationFileName, allowPreCheckin, preCheckinMinutesBeforeStart, standByParticipantCount, isPreCheckinAvailable, qualifier, tournamentManagementPolicyId, predefinedStreamedMatches, lanModeEnabled, enableLanTagging, lanTag, allowedCountryIds, allowedCountryList, pauseIfQualifierEndsInTie, isPausedForTiedQualifierFinish, isPausedForTiedQualifierFinishDateTime, qualifierTiedFinishIsResolved, qualifierTiedFinishIsResolvedDateTime, qualifierTiedFinishIsResolvedByAdministratorId, qualifierTiedFinishIsResolvedByAdministratorProfile, tournamentIsComplete, tournamentIsLive, tournamentLiveDateTime, tournamentId, tournamentTitle, tournamentSubTitle, highlightColor, tournamentDescription, matchConnectionInstructions, gameTitleId, isTeamTournament, minimumNumberOfEntities, maximumNumberOfEntities, teamSize, tournamentTypeId, originalTournamentTypeId, tournamentTypeName, tournamentFeeAmount, tournamentStartDateTime, tournamentEndDateTime, registrationCutoffDateTime, isPublic, isFavorite, enableMatchLobby, logoIsBorderless, logoUrl, backgroundUrl, logoRelativeUrl, backgroundRelativeUrl, backgroundHomeUrl, backgroundHomeRelativeUrl, backgroundSearchUrl, backgroundSearchRelativeUrl, joinPasswordRequired, hasConsolationRound, currentNumberOfParticipants, game, lastUpdatedDateTime, websiteUrl, facebookUrl, twitchUrl, instagramUrl, twitterUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TournamentCompleteOutputModel {\n");
    
    sb.append("    generationTicks: ").append(toIndentedString(generationTicks)).append("\n");
    sb.append("    rulesTitle: ").append(toIndentedString(rulesTitle)).append("\n");
    sb.append("    rulesDescription: ").append(toIndentedString(rulesDescription)).append("\n");
    sb.append("    administrators: ").append(toIndentedString(administrators)).append("\n");
    sb.append("    entityOwnerProfile: ").append(toIndentedString(entityOwnerProfile)).append("\n");
    sb.append("    participants: ").append(toIndentedString(participants)).append("\n");
    sb.append("    matches: ").append(toIndentedString(matches)).append("\n");
    sb.append("    payouts: ").append(toIndentedString(payouts)).append("\n");
    sb.append("    roundRules: ").append(toIndentedString(roundRules)).append("\n");
    sb.append("    tournamentManagementPolicy: ").append(toIndentedString(tournamentManagementPolicy)).append("\n");
    sb.append("    tournamentStateId: ").append(toIndentedString(tournamentStateId)).append("\n");
    sb.append("    isPublished: ").append(toIndentedString(isPublished)).append("\n");
    sb.append("    gameName: ").append(toIndentedString(gameName)).append("\n");
    sb.append("    entityOwnerId: ").append(toIndentedString(entityOwnerId)).append("\n");
    sb.append("    developerPartnerId: ").append(toIndentedString(developerPartnerId)).append("\n");
    sb.append("    gameTitleRulesId: ").append(toIndentedString(gameTitleRulesId)).append("\n");
    sb.append("    isApproved: ").append(toIndentedString(isApproved)).append("\n");
    sb.append("    isRealCurrency: ").append(toIndentedString(isRealCurrency)).append("\n");
    sb.append("    entityApprovedById: ").append(toIndentedString(entityApprovedById)).append("\n");
    sb.append("    resultIsFinalized: ").append(toIndentedString(resultIsFinalized)).append("\n");
    sb.append("    entityResultFinalizedById: ").append(toIndentedString(entityResultFinalizedById)).append("\n");
    sb.append("    tournamentPassword: ").append(toIndentedString(tournamentPassword)).append("\n");
    sb.append("    tournamentJoinTypeId: ").append(toIndentedString(tournamentJoinTypeId)).append("\n");
    sb.append("    tournamentJoinTypeName: ").append(toIndentedString(tournamentJoinTypeName)).append("\n");
    sb.append("    prizePoolAmount: ").append(toIndentedString(prizePoolAmount)).append("\n");
    sb.append("    tournamentPrizeFundingTypeId: ").append(toIndentedString(tournamentPrizeFundingTypeId)).append("\n");
    sb.append("    tournamentPrizeFundingTypeName: ").append(toIndentedString(tournamentPrizeFundingTypeName)).append("\n");
    sb.append("    percentOfEntryFeeToPrizePool: ").append(toIndentedString(percentOfEntryFeeToPrizePool)).append("\n");
    sb.append("    doesCycle: ").append(toIndentedString(doesCycle)).append("\n");
    sb.append("    cycleLengthInMinutes: ").append(toIndentedString(cycleLengthInMinutes)).append("\n");
    sb.append("    cycleMinutesBeforeStart: ").append(toIndentedString(cycleMinutesBeforeStart)).append("\n");
    sb.append("    maxCycleCount: ").append(toIndentedString(maxCycleCount)).append("\n");
    sb.append("    cycleCount: ").append(toIndentedString(cycleCount)).append("\n");
    sb.append("    hasCycled: ").append(toIndentedString(hasCycled)).append("\n");
    sb.append("    cycledTournamentId: ").append(toIndentedString(cycledTournamentId)).append("\n");
    sb.append("    canOnlyRegisterFromRegionId: ").append(toIndentedString(canOnlyRegisterFromRegionId)).append("\n");
    sb.append("    canOnlyRegisterFromRegionName: ").append(toIndentedString(canOnlyRegisterFromRegionName)).append("\n");
    sb.append("    gamingServerRegionName: ").append(toIndentedString(gamingServerRegionName)).append("\n");
    sb.append("    roundRobinIsComplete: ").append(toIndentedString(roundRobinIsComplete)).append("\n");
    sb.append("    tournamentSeedingTypeId: ").append(toIndentedString(tournamentSeedingTypeId)).append("\n");
    sb.append("    tournamentPairingTypeId: ").append(toIndentedString(tournamentPairingTypeId)).append("\n");
    sb.append("    payoutCount: ").append(toIndentedString(payoutCount)).append("\n");
    sb.append("    automaticGoLiveOnSchedule: ").append(toIndentedString(automaticGoLiveOnSchedule)).append("\n");
    sb.append("    minutesAfterStartToForfeit: ").append(toIndentedString(minutesAfterStartToForfeit)).append("\n");
    sb.append("    minutesBeforeStartToAllowCheckin: ").append(toIndentedString(minutesBeforeStartToAllowCheckin)).append("\n");
    sb.append("    sponsors: ").append(toIndentedString(sponsors)).append("\n");
    sb.append("    announcements: ").append(toIndentedString(announcements)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    developerId: ").append(toIndentedString(developerId)).append("\n");
    sb.append("    gameTitleStateId: ").append(toIndentedString(gameTitleStateId)).append("\n");
    sb.append("    allMatchesRunManualMode: ").append(toIndentedString(allMatchesRunManualMode)).append("\n");
    sb.append("    thirdPartyTournamentId: ").append(toIndentedString(thirdPartyTournamentId)).append("\n");
    sb.append("    thirdPartyApiRegion: ").append(toIndentedString(thirdPartyApiRegion)).append("\n");
    sb.append("    thirdPartyTournamentConfiguration: ").append(toIndentedString(thirdPartyTournamentConfiguration)).append("\n");
    sb.append("    logoListUrl: ").append(toIndentedString(logoListUrl)).append("\n");
    sb.append("    logoListRelativeUrl: ").append(toIndentedString(logoListRelativeUrl)).append("\n");
    sb.append("    logoHomeUrl: ").append(toIndentedString(logoHomeUrl)).append("\n");
    sb.append("    logoHomeRelativeUrl: ").append(toIndentedString(logoHomeRelativeUrl)).append("\n");
    sb.append("    logoFeaturedUrl: ").append(toIndentedString(logoFeaturedUrl)).append("\n");
    sb.append("    logoFeaturedRelativeUrl: ").append(toIndentedString(logoFeaturedRelativeUrl)).append("\n");
    sb.append("    serverConfigurationFileName: ").append(toIndentedString(serverConfigurationFileName)).append("\n");
    sb.append("    allowPreCheckin: ").append(toIndentedString(allowPreCheckin)).append("\n");
    sb.append("    preCheckinMinutesBeforeStart: ").append(toIndentedString(preCheckinMinutesBeforeStart)).append("\n");
    sb.append("    standByParticipantCount: ").append(toIndentedString(standByParticipantCount)).append("\n");
    sb.append("    isPreCheckinAvailable: ").append(toIndentedString(isPreCheckinAvailable)).append("\n");
    sb.append("    qualifier: ").append(toIndentedString(qualifier)).append("\n");
    sb.append("    tournamentManagementPolicyId: ").append(toIndentedString(tournamentManagementPolicyId)).append("\n");
    sb.append("    predefinedStreamedMatches: ").append(toIndentedString(predefinedStreamedMatches)).append("\n");
    sb.append("    lanModeEnabled: ").append(toIndentedString(lanModeEnabled)).append("\n");
    sb.append("    enableLanTagging: ").append(toIndentedString(enableLanTagging)).append("\n");
    sb.append("    lanTag: ").append(toIndentedString(lanTag)).append("\n");
    sb.append("    allowedCountryIds: ").append(toIndentedString(allowedCountryIds)).append("\n");
    sb.append("    allowedCountryList: ").append(toIndentedString(allowedCountryList)).append("\n");
    sb.append("    pauseIfQualifierEndsInTie: ").append(toIndentedString(pauseIfQualifierEndsInTie)).append("\n");
    sb.append("    isPausedForTiedQualifierFinish: ").append(toIndentedString(isPausedForTiedQualifierFinish)).append("\n");
    sb.append("    isPausedForTiedQualifierFinishDateTime: ").append(toIndentedString(isPausedForTiedQualifierFinishDateTime)).append("\n");
    sb.append("    qualifierTiedFinishIsResolved: ").append(toIndentedString(qualifierTiedFinishIsResolved)).append("\n");
    sb.append("    qualifierTiedFinishIsResolvedDateTime: ").append(toIndentedString(qualifierTiedFinishIsResolvedDateTime)).append("\n");
    sb.append("    qualifierTiedFinishIsResolvedByAdministratorId: ").append(toIndentedString(qualifierTiedFinishIsResolvedByAdministratorId)).append("\n");
    sb.append("    qualifierTiedFinishIsResolvedByAdministratorProfile: ").append(toIndentedString(qualifierTiedFinishIsResolvedByAdministratorProfile)).append("\n");
    sb.append("    tournamentIsComplete: ").append(toIndentedString(tournamentIsComplete)).append("\n");
    sb.append("    tournamentIsLive: ").append(toIndentedString(tournamentIsLive)).append("\n");
    sb.append("    tournamentLiveDateTime: ").append(toIndentedString(tournamentLiveDateTime)).append("\n");
    sb.append("    tournamentId: ").append(toIndentedString(tournamentId)).append("\n");
    sb.append("    tournamentTitle: ").append(toIndentedString(tournamentTitle)).append("\n");
    sb.append("    tournamentSubTitle: ").append(toIndentedString(tournamentSubTitle)).append("\n");
    sb.append("    highlightColor: ").append(toIndentedString(highlightColor)).append("\n");
    sb.append("    tournamentDescription: ").append(toIndentedString(tournamentDescription)).append("\n");
    sb.append("    matchConnectionInstructions: ").append(toIndentedString(matchConnectionInstructions)).append("\n");
    sb.append("    gameTitleId: ").append(toIndentedString(gameTitleId)).append("\n");
    sb.append("    isTeamTournament: ").append(toIndentedString(isTeamTournament)).append("\n");
    sb.append("    minimumNumberOfEntities: ").append(toIndentedString(minimumNumberOfEntities)).append("\n");
    sb.append("    maximumNumberOfEntities: ").append(toIndentedString(maximumNumberOfEntities)).append("\n");
    sb.append("    teamSize: ").append(toIndentedString(teamSize)).append("\n");
    sb.append("    tournamentTypeId: ").append(toIndentedString(tournamentTypeId)).append("\n");
    sb.append("    originalTournamentTypeId: ").append(toIndentedString(originalTournamentTypeId)).append("\n");
    sb.append("    tournamentTypeName: ").append(toIndentedString(tournamentTypeName)).append("\n");
    sb.append("    tournamentFeeAmount: ").append(toIndentedString(tournamentFeeAmount)).append("\n");
    sb.append("    tournamentStartDateTime: ").append(toIndentedString(tournamentStartDateTime)).append("\n");
    sb.append("    tournamentEndDateTime: ").append(toIndentedString(tournamentEndDateTime)).append("\n");
    sb.append("    registrationCutoffDateTime: ").append(toIndentedString(registrationCutoffDateTime)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    isFavorite: ").append(toIndentedString(isFavorite)).append("\n");
    sb.append("    enableMatchLobby: ").append(toIndentedString(enableMatchLobby)).append("\n");
    sb.append("    logoIsBorderless: ").append(toIndentedString(logoIsBorderless)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    backgroundUrl: ").append(toIndentedString(backgroundUrl)).append("\n");
    sb.append("    logoRelativeUrl: ").append(toIndentedString(logoRelativeUrl)).append("\n");
    sb.append("    backgroundRelativeUrl: ").append(toIndentedString(backgroundRelativeUrl)).append("\n");
    sb.append("    backgroundHomeUrl: ").append(toIndentedString(backgroundHomeUrl)).append("\n");
    sb.append("    backgroundHomeRelativeUrl: ").append(toIndentedString(backgroundHomeRelativeUrl)).append("\n");
    sb.append("    backgroundSearchUrl: ").append(toIndentedString(backgroundSearchUrl)).append("\n");
    sb.append("    backgroundSearchRelativeUrl: ").append(toIndentedString(backgroundSearchRelativeUrl)).append("\n");
    sb.append("    joinPasswordRequired: ").append(toIndentedString(joinPasswordRequired)).append("\n");
    sb.append("    hasConsolationRound: ").append(toIndentedString(hasConsolationRound)).append("\n");
    sb.append("    currentNumberOfParticipants: ").append(toIndentedString(currentNumberOfParticipants)).append("\n");
    sb.append("    game: ").append(toIndentedString(game)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    facebookUrl: ").append(toIndentedString(facebookUrl)).append("\n");
    sb.append("    twitchUrl: ").append(toIndentedString(twitchUrl)).append("\n");
    sb.append("    instagramUrl: ").append(toIndentedString(instagramUrl)).append("\n");
    sb.append("    twitterUrl: ").append(toIndentedString(twitterUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

