/*
 * Polling API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.EntityProfileModel;
import org.joda.time.DateTime;

/**
 * TournamentMatchDisputeModel
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-02T00:05:30.138Z")
public class TournamentMatchDisputeModel {
  @SerializedName("TournamentMatchDisputeId")
  private Long tournamentMatchDisputeId = null;

  @SerializedName("TournamentMatchId")
  private Long tournamentMatchId = null;

  @SerializedName("DisputeState")
  private Integer disputeState = null;

  @SerializedName("InitiatedByPlayerId")
  private Long initiatedByPlayerId = null;

  @SerializedName("InitiatedByPlayerProfile")
  private EntityProfileModel initiatedByPlayerProfile = null;

  @SerializedName("InitiatorOnTeamA")
  private Boolean initiatorOnTeamA = null;

  @SerializedName("TeamAScore")
  private Float teamAScore = null;

  @SerializedName("TeamBScore")
  private Float teamBScore = null;

  @SerializedName("DisputeDateTime")
  private DateTime disputeDateTime = null;

  @SerializedName("EntityAdministratorId")
  private Long entityAdministratorId = null;

  @SerializedName("ResolutionDateTime")
  private DateTime resolutionDateTime = null;

  @SerializedName("ResolutionTeamAScore")
  private Float resolutionTeamAScore = null;

  @SerializedName("ResolutionTeamBScore")
  private Float resolutionTeamBScore = null;

  public TournamentMatchDisputeModel tournamentMatchDisputeId(Long tournamentMatchDisputeId) {
    this.tournamentMatchDisputeId = tournamentMatchDisputeId;
    return this;
  }

   /**
   * Get tournamentMatchDisputeId
   * @return tournamentMatchDisputeId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getTournamentMatchDisputeId() {
    return tournamentMatchDisputeId;
  }

  public void setTournamentMatchDisputeId(Long tournamentMatchDisputeId) {
    this.tournamentMatchDisputeId = tournamentMatchDisputeId;
  }

  public TournamentMatchDisputeModel tournamentMatchId(Long tournamentMatchId) {
    this.tournamentMatchId = tournamentMatchId;
    return this;
  }

   /**
   * Get tournamentMatchId
   * @return tournamentMatchId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getTournamentMatchId() {
    return tournamentMatchId;
  }

  public void setTournamentMatchId(Long tournamentMatchId) {
    this.tournamentMatchId = tournamentMatchId;
  }

  public TournamentMatchDisputeModel disputeState(Integer disputeState) {
    this.disputeState = disputeState;
    return this;
  }

   /**
   * Get disputeState
   * @return disputeState
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getDisputeState() {
    return disputeState;
  }

  public void setDisputeState(Integer disputeState) {
    this.disputeState = disputeState;
  }

  public TournamentMatchDisputeModel initiatedByPlayerId(Long initiatedByPlayerId) {
    this.initiatedByPlayerId = initiatedByPlayerId;
    return this;
  }

   /**
   * Get initiatedByPlayerId
   * @return initiatedByPlayerId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getInitiatedByPlayerId() {
    return initiatedByPlayerId;
  }

  public void setInitiatedByPlayerId(Long initiatedByPlayerId) {
    this.initiatedByPlayerId = initiatedByPlayerId;
  }

  public TournamentMatchDisputeModel initiatedByPlayerProfile(EntityProfileModel initiatedByPlayerProfile) {
    this.initiatedByPlayerProfile = initiatedByPlayerProfile;
    return this;
  }

   /**
   * Get initiatedByPlayerProfile
   * @return initiatedByPlayerProfile
  **/
  @ApiModelProperty(example = "null", value = "")
  public EntityProfileModel getInitiatedByPlayerProfile() {
    return initiatedByPlayerProfile;
  }

  public void setInitiatedByPlayerProfile(EntityProfileModel initiatedByPlayerProfile) {
    this.initiatedByPlayerProfile = initiatedByPlayerProfile;
  }

  public TournamentMatchDisputeModel initiatorOnTeamA(Boolean initiatorOnTeamA) {
    this.initiatorOnTeamA = initiatorOnTeamA;
    return this;
  }

   /**
   * Get initiatorOnTeamA
   * @return initiatorOnTeamA
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getInitiatorOnTeamA() {
    return initiatorOnTeamA;
  }

  public void setInitiatorOnTeamA(Boolean initiatorOnTeamA) {
    this.initiatorOnTeamA = initiatorOnTeamA;
  }

  public TournamentMatchDisputeModel teamAScore(Float teamAScore) {
    this.teamAScore = teamAScore;
    return this;
  }

   /**
   * Get teamAScore
   * @return teamAScore
  **/
  @ApiModelProperty(example = "null", value = "")
  public Float getTeamAScore() {
    return teamAScore;
  }

  public void setTeamAScore(Float teamAScore) {
    this.teamAScore = teamAScore;
  }

  public TournamentMatchDisputeModel teamBScore(Float teamBScore) {
    this.teamBScore = teamBScore;
    return this;
  }

   /**
   * Get teamBScore
   * @return teamBScore
  **/
  @ApiModelProperty(example = "null", value = "")
  public Float getTeamBScore() {
    return teamBScore;
  }

  public void setTeamBScore(Float teamBScore) {
    this.teamBScore = teamBScore;
  }

  public TournamentMatchDisputeModel disputeDateTime(DateTime disputeDateTime) {
    this.disputeDateTime = disputeDateTime;
    return this;
  }

   /**
   * Get disputeDateTime
   * @return disputeDateTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getDisputeDateTime() {
    return disputeDateTime;
  }

  public void setDisputeDateTime(DateTime disputeDateTime) {
    this.disputeDateTime = disputeDateTime;
  }

  public TournamentMatchDisputeModel entityAdministratorId(Long entityAdministratorId) {
    this.entityAdministratorId = entityAdministratorId;
    return this;
  }

   /**
   * Get entityAdministratorId
   * @return entityAdministratorId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getEntityAdministratorId() {
    return entityAdministratorId;
  }

  public void setEntityAdministratorId(Long entityAdministratorId) {
    this.entityAdministratorId = entityAdministratorId;
  }

  public TournamentMatchDisputeModel resolutionDateTime(DateTime resolutionDateTime) {
    this.resolutionDateTime = resolutionDateTime;
    return this;
  }

   /**
   * Get resolutionDateTime
   * @return resolutionDateTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getResolutionDateTime() {
    return resolutionDateTime;
  }

  public void setResolutionDateTime(DateTime resolutionDateTime) {
    this.resolutionDateTime = resolutionDateTime;
  }

  public TournamentMatchDisputeModel resolutionTeamAScore(Float resolutionTeamAScore) {
    this.resolutionTeamAScore = resolutionTeamAScore;
    return this;
  }

   /**
   * Get resolutionTeamAScore
   * @return resolutionTeamAScore
  **/
  @ApiModelProperty(example = "null", value = "")
  public Float getResolutionTeamAScore() {
    return resolutionTeamAScore;
  }

  public void setResolutionTeamAScore(Float resolutionTeamAScore) {
    this.resolutionTeamAScore = resolutionTeamAScore;
  }

  public TournamentMatchDisputeModel resolutionTeamBScore(Float resolutionTeamBScore) {
    this.resolutionTeamBScore = resolutionTeamBScore;
    return this;
  }

   /**
   * Get resolutionTeamBScore
   * @return resolutionTeamBScore
  **/
  @ApiModelProperty(example = "null", value = "")
  public Float getResolutionTeamBScore() {
    return resolutionTeamBScore;
  }

  public void setResolutionTeamBScore(Float resolutionTeamBScore) {
    this.resolutionTeamBScore = resolutionTeamBScore;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TournamentMatchDisputeModel tournamentMatchDisputeModel = (TournamentMatchDisputeModel) o;
    return Objects.equals(this.tournamentMatchDisputeId, tournamentMatchDisputeModel.tournamentMatchDisputeId) &&
        Objects.equals(this.tournamentMatchId, tournamentMatchDisputeModel.tournamentMatchId) &&
        Objects.equals(this.disputeState, tournamentMatchDisputeModel.disputeState) &&
        Objects.equals(this.initiatedByPlayerId, tournamentMatchDisputeModel.initiatedByPlayerId) &&
        Objects.equals(this.initiatedByPlayerProfile, tournamentMatchDisputeModel.initiatedByPlayerProfile) &&
        Objects.equals(this.initiatorOnTeamA, tournamentMatchDisputeModel.initiatorOnTeamA) &&
        Objects.equals(this.teamAScore, tournamentMatchDisputeModel.teamAScore) &&
        Objects.equals(this.teamBScore, tournamentMatchDisputeModel.teamBScore) &&
        Objects.equals(this.disputeDateTime, tournamentMatchDisputeModel.disputeDateTime) &&
        Objects.equals(this.entityAdministratorId, tournamentMatchDisputeModel.entityAdministratorId) &&
        Objects.equals(this.resolutionDateTime, tournamentMatchDisputeModel.resolutionDateTime) &&
        Objects.equals(this.resolutionTeamAScore, tournamentMatchDisputeModel.resolutionTeamAScore) &&
        Objects.equals(this.resolutionTeamBScore, tournamentMatchDisputeModel.resolutionTeamBScore);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tournamentMatchDisputeId, tournamentMatchId, disputeState, initiatedByPlayerId, initiatedByPlayerProfile, initiatorOnTeamA, teamAScore, teamBScore, disputeDateTime, entityAdministratorId, resolutionDateTime, resolutionTeamAScore, resolutionTeamBScore);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TournamentMatchDisputeModel {\n");
    
    sb.append("    tournamentMatchDisputeId: ").append(toIndentedString(tournamentMatchDisputeId)).append("\n");
    sb.append("    tournamentMatchId: ").append(toIndentedString(tournamentMatchId)).append("\n");
    sb.append("    disputeState: ").append(toIndentedString(disputeState)).append("\n");
    sb.append("    initiatedByPlayerId: ").append(toIndentedString(initiatedByPlayerId)).append("\n");
    sb.append("    initiatedByPlayerProfile: ").append(toIndentedString(initiatedByPlayerProfile)).append("\n");
    sb.append("    initiatorOnTeamA: ").append(toIndentedString(initiatorOnTeamA)).append("\n");
    sb.append("    teamAScore: ").append(toIndentedString(teamAScore)).append("\n");
    sb.append("    teamBScore: ").append(toIndentedString(teamBScore)).append("\n");
    sb.append("    disputeDateTime: ").append(toIndentedString(disputeDateTime)).append("\n");
    sb.append("    entityAdministratorId: ").append(toIndentedString(entityAdministratorId)).append("\n");
    sb.append("    resolutionDateTime: ").append(toIndentedString(resolutionDateTime)).append("\n");
    sb.append("    resolutionTeamAScore: ").append(toIndentedString(resolutionTeamAScore)).append("\n");
    sb.append("    resolutionTeamBScore: ").append(toIndentedString(resolutionTeamBScore)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

