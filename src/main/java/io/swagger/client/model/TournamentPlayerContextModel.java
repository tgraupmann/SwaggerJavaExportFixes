/*
 * Polling API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.EntityProfileModel;
import java.util.ArrayList;
import java.util.List;

/**
 * TournamentPlayerContextModel
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-02T00:05:30.138Z")
public class TournamentPlayerContextModel {
  @SerializedName("IsRegisteredForTournament")
  private Boolean isRegisteredForTournament = null;

  @SerializedName("RegisteredEntityId")
  private Long registeredEntityId = null;

  @SerializedName("IsMyLanModeEnabled")
  private Boolean isMyLanModeEnabled = null;

  @SerializedName("MyLanSeatLocation")
  private String myLanSeatLocation = null;

  @SerializedName("RegisteredTeamProfile")
  private EntityProfileModel registeredTeamProfile = null;

  @SerializedName("IsCheckedIn")
  private Boolean isCheckedIn = null;

  @SerializedName("IsRegisteredAsStandby")
  private Boolean isRegisteredAsStandby = null;

  @SerializedName("RegisteredAsStandbyPosition")
  private Integer registeredAsStandbyPosition = null;

  @SerializedName("IsTournamentSpecificAdministrator")
  private Boolean isTournamentSpecificAdministrator = null;

  @SerializedName("IsTournamentAdministrator")
  private Boolean isTournamentAdministrator = null;

  @SerializedName("IsDisqualified")
  private Boolean isDisqualified = null;

  @SerializedName("IsTeamCaptain")
  private Boolean isTeamCaptain = null;

  @SerializedName("TournamentMatchIdFeedbackList")
  private List<Long> tournamentMatchIdFeedbackList = new ArrayList<Long>();

  public TournamentPlayerContextModel isRegisteredForTournament(Boolean isRegisteredForTournament) {
    this.isRegisteredForTournament = isRegisteredForTournament;
    return this;
  }

   /**
   * Get isRegisteredForTournament
   * @return isRegisteredForTournament
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsRegisteredForTournament() {
    return isRegisteredForTournament;
  }

  public void setIsRegisteredForTournament(Boolean isRegisteredForTournament) {
    this.isRegisteredForTournament = isRegisteredForTournament;
  }

  public TournamentPlayerContextModel registeredEntityId(Long registeredEntityId) {
    this.registeredEntityId = registeredEntityId;
    return this;
  }

   /**
   * Get registeredEntityId
   * @return registeredEntityId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getRegisteredEntityId() {
    return registeredEntityId;
  }

  public void setRegisteredEntityId(Long registeredEntityId) {
    this.registeredEntityId = registeredEntityId;
  }

  public TournamentPlayerContextModel isMyLanModeEnabled(Boolean isMyLanModeEnabled) {
    this.isMyLanModeEnabled = isMyLanModeEnabled;
    return this;
  }

   /**
   * Get isMyLanModeEnabled
   * @return isMyLanModeEnabled
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsMyLanModeEnabled() {
    return isMyLanModeEnabled;
  }

  public void setIsMyLanModeEnabled(Boolean isMyLanModeEnabled) {
    this.isMyLanModeEnabled = isMyLanModeEnabled;
  }

  public TournamentPlayerContextModel myLanSeatLocation(String myLanSeatLocation) {
    this.myLanSeatLocation = myLanSeatLocation;
    return this;
  }

   /**
   * Get myLanSeatLocation
   * @return myLanSeatLocation
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMyLanSeatLocation() {
    return myLanSeatLocation;
  }

  public void setMyLanSeatLocation(String myLanSeatLocation) {
    this.myLanSeatLocation = myLanSeatLocation;
  }

  public TournamentPlayerContextModel registeredTeamProfile(EntityProfileModel registeredTeamProfile) {
    this.registeredTeamProfile = registeredTeamProfile;
    return this;
  }

   /**
   * Get registeredTeamProfile
   * @return registeredTeamProfile
  **/
  @ApiModelProperty(example = "null", value = "")
  public EntityProfileModel getRegisteredTeamProfile() {
    return registeredTeamProfile;
  }

  public void setRegisteredTeamProfile(EntityProfileModel registeredTeamProfile) {
    this.registeredTeamProfile = registeredTeamProfile;
  }

  public TournamentPlayerContextModel isCheckedIn(Boolean isCheckedIn) {
    this.isCheckedIn = isCheckedIn;
    return this;
  }

   /**
   * Get isCheckedIn
   * @return isCheckedIn
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsCheckedIn() {
    return isCheckedIn;
  }

  public void setIsCheckedIn(Boolean isCheckedIn) {
    this.isCheckedIn = isCheckedIn;
  }

  public TournamentPlayerContextModel isRegisteredAsStandby(Boolean isRegisteredAsStandby) {
    this.isRegisteredAsStandby = isRegisteredAsStandby;
    return this;
  }

   /**
   * Get isRegisteredAsStandby
   * @return isRegisteredAsStandby
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsRegisteredAsStandby() {
    return isRegisteredAsStandby;
  }

  public void setIsRegisteredAsStandby(Boolean isRegisteredAsStandby) {
    this.isRegisteredAsStandby = isRegisteredAsStandby;
  }

  public TournamentPlayerContextModel registeredAsStandbyPosition(Integer registeredAsStandbyPosition) {
    this.registeredAsStandbyPosition = registeredAsStandbyPosition;
    return this;
  }

   /**
   * Get registeredAsStandbyPosition
   * @return registeredAsStandbyPosition
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getRegisteredAsStandbyPosition() {
    return registeredAsStandbyPosition;
  }

  public void setRegisteredAsStandbyPosition(Integer registeredAsStandbyPosition) {
    this.registeredAsStandbyPosition = registeredAsStandbyPosition;
  }

  public TournamentPlayerContextModel isTournamentSpecificAdministrator(Boolean isTournamentSpecificAdministrator) {
    this.isTournamentSpecificAdministrator = isTournamentSpecificAdministrator;
    return this;
  }

   /**
   * Get isTournamentSpecificAdministrator
   * @return isTournamentSpecificAdministrator
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsTournamentSpecificAdministrator() {
    return isTournamentSpecificAdministrator;
  }

  public void setIsTournamentSpecificAdministrator(Boolean isTournamentSpecificAdministrator) {
    this.isTournamentSpecificAdministrator = isTournamentSpecificAdministrator;
  }

  public TournamentPlayerContextModel isTournamentAdministrator(Boolean isTournamentAdministrator) {
    this.isTournamentAdministrator = isTournamentAdministrator;
    return this;
  }

   /**
   * Get isTournamentAdministrator
   * @return isTournamentAdministrator
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsTournamentAdministrator() {
    return isTournamentAdministrator;
  }

  public void setIsTournamentAdministrator(Boolean isTournamentAdministrator) {
    this.isTournamentAdministrator = isTournamentAdministrator;
  }

  public TournamentPlayerContextModel isDisqualified(Boolean isDisqualified) {
    this.isDisqualified = isDisqualified;
    return this;
  }

   /**
   * Get isDisqualified
   * @return isDisqualified
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsDisqualified() {
    return isDisqualified;
  }

  public void setIsDisqualified(Boolean isDisqualified) {
    this.isDisqualified = isDisqualified;
  }

  public TournamentPlayerContextModel isTeamCaptain(Boolean isTeamCaptain) {
    this.isTeamCaptain = isTeamCaptain;
    return this;
  }

   /**
   * Get isTeamCaptain
   * @return isTeamCaptain
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsTeamCaptain() {
    return isTeamCaptain;
  }

  public void setIsTeamCaptain(Boolean isTeamCaptain) {
    this.isTeamCaptain = isTeamCaptain;
  }

  public TournamentPlayerContextModel tournamentMatchIdFeedbackList(List<Long> tournamentMatchIdFeedbackList) {
    this.tournamentMatchIdFeedbackList = tournamentMatchIdFeedbackList;
    return this;
  }

  public TournamentPlayerContextModel addTournamentMatchIdFeedbackListItem(Long tournamentMatchIdFeedbackListItem) {
    this.tournamentMatchIdFeedbackList.add(tournamentMatchIdFeedbackListItem);
    return this;
  }

   /**
   * Get tournamentMatchIdFeedbackList
   * @return tournamentMatchIdFeedbackList
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Long> getTournamentMatchIdFeedbackList() {
    return tournamentMatchIdFeedbackList;
  }

  public void setTournamentMatchIdFeedbackList(List<Long> tournamentMatchIdFeedbackList) {
    this.tournamentMatchIdFeedbackList = tournamentMatchIdFeedbackList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TournamentPlayerContextModel tournamentPlayerContextModel = (TournamentPlayerContextModel) o;
    return Objects.equals(this.isRegisteredForTournament, tournamentPlayerContextModel.isRegisteredForTournament) &&
        Objects.equals(this.registeredEntityId, tournamentPlayerContextModel.registeredEntityId) &&
        Objects.equals(this.isMyLanModeEnabled, tournamentPlayerContextModel.isMyLanModeEnabled) &&
        Objects.equals(this.myLanSeatLocation, tournamentPlayerContextModel.myLanSeatLocation) &&
        Objects.equals(this.registeredTeamProfile, tournamentPlayerContextModel.registeredTeamProfile) &&
        Objects.equals(this.isCheckedIn, tournamentPlayerContextModel.isCheckedIn) &&
        Objects.equals(this.isRegisteredAsStandby, tournamentPlayerContextModel.isRegisteredAsStandby) &&
        Objects.equals(this.registeredAsStandbyPosition, tournamentPlayerContextModel.registeredAsStandbyPosition) &&
        Objects.equals(this.isTournamentSpecificAdministrator, tournamentPlayerContextModel.isTournamentSpecificAdministrator) &&
        Objects.equals(this.isTournamentAdministrator, tournamentPlayerContextModel.isTournamentAdministrator) &&
        Objects.equals(this.isDisqualified, tournamentPlayerContextModel.isDisqualified) &&
        Objects.equals(this.isTeamCaptain, tournamentPlayerContextModel.isTeamCaptain) &&
        Objects.equals(this.tournamentMatchIdFeedbackList, tournamentPlayerContextModel.tournamentMatchIdFeedbackList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isRegisteredForTournament, registeredEntityId, isMyLanModeEnabled, myLanSeatLocation, registeredTeamProfile, isCheckedIn, isRegisteredAsStandby, registeredAsStandbyPosition, isTournamentSpecificAdministrator, isTournamentAdministrator, isDisqualified, isTeamCaptain, tournamentMatchIdFeedbackList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TournamentPlayerContextModel {\n");
    
    sb.append("    isRegisteredForTournament: ").append(toIndentedString(isRegisteredForTournament)).append("\n");
    sb.append("    registeredEntityId: ").append(toIndentedString(registeredEntityId)).append("\n");
    sb.append("    isMyLanModeEnabled: ").append(toIndentedString(isMyLanModeEnabled)).append("\n");
    sb.append("    myLanSeatLocation: ").append(toIndentedString(myLanSeatLocation)).append("\n");
    sb.append("    registeredTeamProfile: ").append(toIndentedString(registeredTeamProfile)).append("\n");
    sb.append("    isCheckedIn: ").append(toIndentedString(isCheckedIn)).append("\n");
    sb.append("    isRegisteredAsStandby: ").append(toIndentedString(isRegisteredAsStandby)).append("\n");
    sb.append("    registeredAsStandbyPosition: ").append(toIndentedString(registeredAsStandbyPosition)).append("\n");
    sb.append("    isTournamentSpecificAdministrator: ").append(toIndentedString(isTournamentSpecificAdministrator)).append("\n");
    sb.append("    isTournamentAdministrator: ").append(toIndentedString(isTournamentAdministrator)).append("\n");
    sb.append("    isDisqualified: ").append(toIndentedString(isDisqualified)).append("\n");
    sb.append("    isTeamCaptain: ").append(toIndentedString(isTeamCaptain)).append("\n");
    sb.append("    tournamentMatchIdFeedbackList: ").append(toIndentedString(tournamentMatchIdFeedbackList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

